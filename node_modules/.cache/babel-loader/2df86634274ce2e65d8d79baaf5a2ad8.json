{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/Skills.js\";\nimport React, { Component } from 'react';\nimport './Skills.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SkillList extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [this.props.textSkillName, \" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass AddSkillForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputChange = e => {\n      this.props.handleInputChange('skillsComponentInput', 'inputSkillName', e.target.value);\n    };\n\n    this.addNewSkill = e => {\n      e.preventDefault();\n      this.props.addNewSkill(e.target);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.props.inputs,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewSkill,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddSkillBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = () => this.props.changeSkillsMode(true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeSkillsMode,\n      children: \"+ Skill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Skills extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = boolean => this.props.changeSkillsMode(boolean);\n\n    this.addNewSkill = () => this.props.addNewSkill();\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      inputs\n    } = this.props;\n    const rows = [];\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillBtn, {\n        changeSkillsMode: this.changeSkillsMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillForm, {\n        inputs: inputs,\n        handleInputChange: this.handleInputChange,\n        changeSkillsMode: this.changeSkillsMode,\n        addNewSkill: this.addNewSkill // removeWorkExperience={this.removeWorkExperience}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/Skills.js"],"names":["React","Component","SkillList","render","props","textSkillName","AddSkillForm","handleInputChange","e","target","value","addNewSkill","preventDefault","inputs","AddSkillBtn","changeSkillsMode","Skills","boolean","component","componentProp","inputText","modes","componentsArray","rows","element","appMode","isEdit","skillsMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Skills.css';\n\nclass SkillList extends Component {\n  render() {\n    return <li>{this.props.textSkillName} <span></span></li>;\n  }\n}\n\nclass AddSkillForm extends Component {\n  handleInputChange = (e) => {\n    this.props.handleInputChange(\n      'skillsComponentInput',\n      'inputSkillName',\n      e.target.value\n    );\n  };\n  addNewSkill = (e) => {\n    e.preventDefault();\n    this.props.addNewSkill( e.target);\n  };\n  render() {\n    return (\n      <form /* datakey={this.props.info} */>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={this.props.inputs}\n          onChange={this.handleInputChange}\n        ></input>\n        <button type=\"submit\" onClick={this.addNewSkill}>\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n \nclass AddSkillBtn extends Component {\n  changeSkillsMode = () => this.props.changeSkillsMode(true);\n  render() {\n    return <button onClick={this.changeSkillsMode}>+ Skill</button>;\n  }\n}\n\nclass Skills extends Component {\n  changeSkillsMode = (boolean) => this.props.changeSkillsMode(boolean);\n  addNewSkill = () => this.props.addNewSkill();\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  render() {\n    const { modes, componentsArray, inputs } = this.props;\n    const rows = [];\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = <AddSkillBtn changeSkillsMode={this.changeSkillsMode} />;\n    }\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillForm\n          inputs={inputs}\n          handleInputChange={this.handleInputChange}\n          changeSkillsMode={this.changeSkillsMode}\n          addNewSkill={this.addNewSkill}\n          // removeWorkExperience={this.removeWorkExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Skills</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}