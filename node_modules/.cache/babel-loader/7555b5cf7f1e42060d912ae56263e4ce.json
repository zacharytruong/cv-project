{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react'; // class BasicInfoEditMode extends Component {\n//   getNewFirstNameValue = (e) => {\n//     this.props.getNewFirstNameValue(e);\n//   };\n//   handleUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUpdateBtn(e);\n//   }\n//   render() {\n//     const userInfo = this.props.userInfo;\n//     return (\n//       <form onSubmit={this.handleUpdateBtn}>\n//         <input\n//           type=\"text\"\n//           id=\"firstName\"\n//           placeholder=\"Enter your first name...\"\n//           value={userInfo.firstName.text}\n//           autoComplete=\"off\"\n//           onChange={this.getNewFirstNameValue}\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicInfoPreviewMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => {\n      this.props.turnOnEditMode(e);\n      console.log(this.state.mode);\n    };\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [infoNameValueObj.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.turnOnEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n  }\n\n  render() {\n    const userInfoArray = [];\n    const {\n      userInfo,\n      mode\n    } = this.props;\n\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (infoName === 'firstName' || infoName === 'lastName' || infoName === 'currentRole' || infoName === 'addr' || infoName === 'phone' || infoName === 'email' || infoName === 'github') {\n        userInfoArray.push({\n          [infoName]: infoNameValueObj\n        });\n      } else return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userInfoArray.map(userInfo => {\n        let display;\n        const userBasicInfo = Object.entries(userInfo);\n\n        if (mode.isPreview) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoPreviewMode, {\n            infoNameValueObj: userBasicInfo[0][1],\n            turnOnEditMode: this.turnOnEditMode\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        }\n\n        return display;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = () => this.props.turnOnEditMode();\n  }\n\n  render() {\n    const {\n      mode,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n        mode: mode,\n        userInfo: userInfo,\n        turnOnEditMode: this.turnOnEditMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInfo, {\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","BasicInfoPreviewMode","turnOnEditMode","e","props","console","log","state","mode","render","infoNameValueObj","text","BasicInfo","userInfoArray","userInfo","infoName","Object","entries","push","map","display","userBasicInfo","isPreview","id","ContactInfo","UserInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// class BasicInfoEditMode extends Component {\n//   getNewFirstNameValue = (e) => {\n//     this.props.getNewFirstNameValue(e);\n//   };\n//   handleUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUpdateBtn(e);\n//   }\n//   render() {\n//     const userInfo = this.props.userInfo;\n//     return (\n//       <form onSubmit={this.handleUpdateBtn}>\n//         <input\n//           type=\"text\"\n//           id=\"firstName\"\n//           placeholder=\"Enter your first name...\"\n//           value={userInfo.firstName.text}\n//           autoComplete=\"off\"\n//           onChange={this.getNewFirstNameValue}\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//     );\n//   }\n// }\n\nclass BasicInfoPreviewMode extends Component {\n  turnOnEditMode = (e) => {\n    this.props.turnOnEditMode(e)\n    console.log(this.state.mode)\n  };\n  render() {\n    const { infoNameValueObj } = this.props;\n    return (\n      <p>\n        {infoNameValueObj.text} <span onClick={this.turnOnEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass BasicInfo extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  render() {\n    const userInfoArray = [];\n    const { userInfo, mode } = this.props;\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (\n        infoName === 'firstName' ||\n        infoName === 'lastName' ||\n        infoName === 'currentRole' ||\n        infoName === 'addr' ||\n        infoName === 'phone' ||\n        infoName === 'email' ||\n        infoName === 'github'\n      ) {\n        userInfoArray.push({ [infoName]: infoNameValueObj });\n      } else return;\n    }\n    return (\n      <div>\n        {userInfoArray.map((userInfo) => {\n          let display;\n          const userBasicInfo = Object.entries(userInfo);\n          if (mode.isPreview) {\n            display = (\n              <BasicInfoPreviewMode\n                key={userBasicInfo[0][1].id}\n                infoNameValueObj={userBasicInfo[0][1]}\n                turnOnEditMode={this.turnOnEditMode}\n              />\n            );\n          }\n          return display;\n        })}\n      </div>\n    );\n  }\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return <div className=\"ContactInfo\"></div>;\n  }\n}\n\nclass UserInfo extends Component {\n  turnOnEditMode = () => this.props.turnOnEditMode();\n  render() {\n    const { mode, userInfo } = this.props;\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicInfo\n          mode={mode}\n          userInfo={userInfo}\n          turnOnEditMode={this.turnOnEditMode}\n        />\n        <ContactInfo userInfo={this.props.userInfo} />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}