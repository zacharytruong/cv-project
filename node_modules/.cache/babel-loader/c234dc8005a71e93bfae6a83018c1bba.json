{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/Skills.js\";\nimport React, { Component } from 'react';\nimport './Skills.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddSkillForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputChange = e => {\n      this.props.handleInputChange('skillsComponentInput', 'inputSkillName', e.target.value);\n    };\n\n    this.handleUserInfoUpdateBtn = e => {\n      e.preventDefault();\n      this.props.handleUserInfoUpdateBtn(e.target);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.props.inputs,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewSkill,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddSkillBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = () => this.props.changeSkillsMode(true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeSkillsMode,\n      children: \"+ Skill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Skills extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = boolean => this.props.changeSkillsMode(boolean);\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      inputs = {\n        inputs\n      }\n    } = this.props;\n    const rows = [];\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillBtn, {\n        changeSkillsMode: this.changeSkillsMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillForm, {\n        handleInputChange: this.handleInputChange // changeWorkExperienceMode={this.changeWorkExperienceMode}\n        // addNewExperience={this.addNewExperience}\n        // removeWorkExperience={this.removeWorkExperience}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/Skills.js"],"names":["React","Component","AddSkillForm","handleInputChange","e","props","target","value","handleUserInfoUpdateBtn","preventDefault","render","inputs","addNewSkill","AddSkillBtn","changeSkillsMode","Skills","boolean","component","componentProp","inputText","modes","componentsArray","rows","element","appMode","isEdit","skillsMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCE,iBADmC,GACdC,CAAD,IAAO;AACzB,WAAKC,KAAL,CAAWF,iBAAX,CACE,sBADF,EAEE,gBAFF,EAGEC,CAAC,CAACE,MAAF,CAASC,KAHX;AAKD,KAPkC;;AAAA,SAQnCC,uBARmC,GAQRJ,CAAD,IAAO;AAC/BA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKJ,KAAL,CAAWG,uBAAX,CAAoCJ,CAAC,CAACE,MAAtC;AACD,KAXkC;AAAA;;AAYnCI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,MAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKR;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKS,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1BkC;;AA4BrC,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCa,gBADkC,GACf,MAAM,KAAKT,KAAL,CAAWS,gBAAX,CAA4B,IAA5B,CADS;AAAA;;AAElCJ,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKI,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAJiC;;AAOpC,MAAMC,MAAN,SAAqBd,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7Ba,gBAD6B,GACTE,OAAD,IAAa,KAAKX,KAAL,CAAWS,gBAAX,CAA4BE,OAA5B,CADH;;AAAA,SAE7Bb,iBAF6B,GAET,CAACc,SAAD,EAAYC,aAAZ,EAA2BC,SAA3B,KAClB,KAAKd,KAAL,CAAWF,iBAAX,CAA6Bc,SAA7B,EAAwCC,aAAxC,EAAuDC,SAAvD,CAH2B;AAAA;;AAI7BT,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEU,MAAAA,KAAF;AAASC,MAAAA,eAAT;AAA0BV,MAAAA,MAAM,GAAC;AAACA,QAAAA;AAAD;AAAjC,QAA8C,KAAKN,KAAzD;AACA,UAAMiB,IAAI,GAAG,EAAb;AACA,QAAIC,OAAJ;;AACA,QAAI,CAACH,KAAK,CAACI,OAAN,CAAcC,MAAnB,EAA2B;AACzBF,MAAAA,OAAO,GAAG,IAAV;AACD;;AACD,QAAIH,KAAK,CAACI,OAAN,CAAcC,MAAd,IAAwB,CAACL,KAAK,CAACM,UAAN,CAAiBD,MAA9C,EAAsD;AACpDF,MAAAA,OAAO,gBAAG,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,KAAKT;AAApC;AAAA;AAAA;AAAA;AAAA,cAAV;AACD;;AACD,QAAIM,KAAK,CAACI,OAAN,CAAcC,MAAd,IAAwBL,KAAK,CAACM,UAAN,CAAiBD,MAA7C,EAAqD;AACnDF,MAAAA,OAAO,gBACL,QAAC,YAAD;AAEE,QAAA,iBAAiB,EAAE,KAAKpB,iBAF1B,CAGE;AACA;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGmB,IAFH,EAGGC,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhC4B;;AAmC/B,eAAeR,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Skills.css';\n\nclass AddSkillForm extends Component {\n  handleInputChange = (e) => {\n    this.props.handleInputChange(\n      'skillsComponentInput',\n      'inputSkillName',\n      e.target.value\n    );\n  };\n  handleUserInfoUpdateBtn = (e) => {\n    e.preventDefault();\n    this.props.handleUserInfoUpdateBtn( e.target);\n  };\n  render() {\n    return (\n      <form /* datakey={this.props.info} */>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={this.props.inputs}\n          onChange={this.handleInputChange}\n        ></input>\n        <button type=\"submit\" onClick={this.addNewSkill}>\n          Update\n        </button>\n      </form>\n    );\n  }\n}\nclass AddSkillBtn extends Component {\n  changeSkillsMode = () => this.props.changeSkillsMode(true);\n  render() {\n    return <button onClick={this.changeSkillsMode}>+ Skill</button>;\n  }\n}\n\nclass Skills extends Component {\n  changeSkillsMode = (boolean) => this.props.changeSkillsMode(boolean);\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  render() {\n    const { modes, componentsArray, inputs={inputs} } = this.props;\n    const rows = [];\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = <AddSkillBtn changeSkillsMode={this.changeSkillsMode} />;\n    }\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillForm\n          \n          handleInputChange={this.handleInputChange}\n          // changeWorkExperienceMode={this.changeWorkExperienceMode}\n          // addNewExperience={this.addNewExperience}\n          // removeWorkExperience={this.removeWorkExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Skills</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}