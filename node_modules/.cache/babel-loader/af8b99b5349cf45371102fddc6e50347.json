{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeAppModeToEdit = () => {\n      this.setState({\n        appMode: {\n          isEdit: true\n        }\n      });\n    };\n\n    this.changeAppModeToNonEdit = () => {\n      this.setState({\n        inputText: '',\n        appMode: {\n          isEdit: false\n        }\n      });\n    };\n\n    this.changeRowToEditMode = (element, arr) => {\n      const target = element.parentNode;\n      const parent = Array.from(target.parentNode.children);\n      const index = parent.indexOf(target);\n      console.log();\n      const newArray = [arr];\n      newArray.forEach(item => item.mode.isEdit = false);\n      newArray[index].mode.isEdit = true;\n      this.setState({\n        [arr]: newArray\n      });\n    };\n\n    this.handleInputChange = inputText => {\n      this.setState({\n        inputText: inputText\n      });\n    };\n\n    this.handleUpdateBtn = element => {\n      const target = element.parentNode;\n      const parent = Array.from(target.parentNode.children);\n      const index = parent.indexOf(target);\n      const newArray = [...this.state.userInfoArray];\n      newArray[index].text = this.state.inputText;\n      newArray[index].mode.isEdit = false;\n      this.setState({\n        inputText: '',\n        userInfoArray: newArray\n      });\n    };\n\n    this.state = {\n      appMode: {\n        isEdit: true\n      },\n      userInfoArray: [{\n        name: 'firstName',\n        text: 'First Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'lastName',\n        text: 'Last Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'currentRole',\n        text: 'Fullstack Javascript Developer',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'address',\n        text: 'Houston, TX',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'phone',\n        text: '(555) 555-5555',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'email',\n        text: 'yourname@email.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'github',\n        text: 'https://github.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }]\n    };\n  }\n\n  render() {\n    const {\n      appMode,\n      userInfoArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        appMode: appMode,\n        inputText: this.state.inputText,\n        changeAppModeToEdit: this.changeAppModeToEdit,\n        changeAppModeToNonEdit: this.changeAppModeToNonEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Builder, {\n        appMode: appMode,\n        userInfoArray: userInfoArray,\n        changeRowToEditMode: this.changeRowToEditMode,\n        handleInputChange: this.handleInputChange,\n        handleUpdateBtn: this.handleUpdateBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/App.js"],"names":["React","Header","Builder","Footer","uniqid","App","Component","constructor","props","changeAppModeToEdit","setState","appMode","isEdit","changeAppModeToNonEdit","inputText","changeRowToEditMode","element","arr","target","parentNode","parent","Array","from","children","index","indexOf","console","log","newArray","forEach","item","mode","handleInputChange","handleUpdateBtn","state","userInfoArray","text","name","id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appMode: {\n        isEdit: true\n      },\n      userInfoArray: [\n        {\n          name: 'firstName',\n          text: 'First Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'lastName',\n          text: 'Last Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'currentRole',\n          text: 'Fullstack Javascript Developer',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'address',\n          text: 'Houston, TX',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'phone',\n          text: '(555) 555-5555',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'email',\n          text: 'yourname@email.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'github',\n          text: 'https://github.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        }\n      ]\n    };\n  }\n  changeAppModeToEdit = () => {\n    this.setState({\n      appMode: {\n        isEdit: true\n      }\n    });\n  };\n  changeAppModeToNonEdit = () => {\n    this.setState({\n      inputText: '',\n      appMode: {\n        isEdit: false\n      }\n    });\n  };\n  changeRowToEditMode = (element, arr) => {\n    const target = element.parentNode;\n    const parent = Array.from(target.parentNode.children);\n    const index = parent.indexOf(target);\n    console.log()\n    const newArray = [arr];\n    newArray.forEach((item) => (item.mode.isEdit = false));\n    newArray[index].mode.isEdit = true;\n    this.setState({\n      [arr]: newArray\n    });\n  };\n  handleInputChange = (inputText) => {\n    this.setState({\n      inputText: inputText\n    });\n  };\n  handleUpdateBtn = (element) => {\n    const target = element.parentNode;\n    const parent = Array.from(target.parentNode.children);\n    const index = parent.indexOf(target);\n    const newArray = [...this.state.userInfoArray];\n    newArray[index].text = this.state.inputText;\n    newArray[index].mode.isEdit = false;\n    this.setState({\n      inputText: '',\n      userInfoArray: newArray\n    });\n  };\n  render() {\n    const { appMode, userInfoArray } = this.state;\n    return (\n      <div className=\"appContainer\">\n        <Header\n          appMode={appMode}\n          inputText={this.state.inputText}\n          changeAppModeToEdit={this.changeAppModeToEdit}\n          changeAppModeToNonEdit={this.changeAppModeToNonEdit}\n        />\n        <Builder\n          appMode={appMode}\n          userInfoArray={userInfoArray}\n          changeRowToEditMode={this.changeRowToEditMode}\n          handleInputChange={this.handleInputChange}\n          handleUpdateBtn={this.handleUpdateBtn}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}