{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: true,\n        value: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass EditPencil extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass BasicUserInfo extends Component {\n  render() {\n    const {\n      modes,\n      inputuserInfo,\n      textUserInfoComponent\n    } = this.props;\n    const rows = [];\n    let element;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ExtendedUserInfo extends Component {\n  render() {\n    // const { modes, userInfoArray, textUserInfoComponent } = this.props;\n    // const rows = [];\n    // let element;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  // changeInfoRowToEditMode = (element, arr) => {\n  //   this.props.changeInfoRowToEditMode(element, arr);\n  // };\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    const {\n      modes,\n      inputs,\n      textDisplay\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicUserInfo, {\n        modes: modes,\n        inputUserInfo: inputs.userInfoComponentInput.inputUserInfo,\n        userInfoText: textDisplay.textUserInfoComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExtendedUserInfo, {\n        modes: modes,\n        inputUserInfo: inputs.userInfoComponentInput.inputUserInfo,\n        userInfoText: textDisplay.textUserInfoComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","InfoRowForm","render","InfoRow","EditPencil","BasicUserInfo","modes","inputuserInfo","textUserInfoComponent","props","rows","element","ExtendedUserInfo","UserInfo","inputs","textDisplay","userInfoComponentInput","inputUserInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAtBiC;;AAyBpC,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BE,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAH6B;;AAMhC,MAAME,UAAN,SAAyBJ,SAAzB,CAAmC;AAEjCE,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAJgC;;AAOnC,MAAMG,aAAN,SAA4BL,SAA5B,CAAsC;AACpCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEI,MAAAA,KAAF;AAASC,MAAAA,aAAT;AAAwBC,MAAAA;AAAxB,QAAkD,KAAKC,KAA7D;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,QAAIC,OAAJ;AAEA,wBACE;AAAA,6BACE;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAbmC;;AAgBtC,MAAME,gBAAN,SAA+BZ,SAA/B,CAAyC;AACvCE,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAXsC;;AAczC,MAAMW,QAAN,SAAuBb,SAAvB,CAAiC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEI,MAAAA,KAAF;AAASQ,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAAiC,KAAKN,KAA5C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,KAAK,EAAEH,KADT;AAEE,QAAA,aAAa,EAAEQ,MAAM,CAACE,sBAAP,CAA8BC,aAF/C;AAGE,QAAA,YAAY,EAAEF,WAAW,CAACP;AAH5B;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,gBAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,aAAa,EAAEQ,MAAM,CAACE,sBAAP,CAA8BC,aAF/C;AAGE,QAAA,YAAY,EAAEF,WAAW,CAACP;AAH5B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA3B8B;;AA8BjC,eAAeK,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './UserInfo.css';\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange\n          value\n        ></input>\n        <button type=\"submit\" onClick>\n          Update\n        </button>\n      </form>\n    );\n  }\n}\n\nclass InfoRow extends Component {\n  render() {\n    return <span></span>;\n  }\n}\n\nclass EditPencil extends Component {\n\n  render() {\n    return <span>âœŽ</span>;\n  }\n}\n\nclass BasicUserInfo extends Component {\n  render() {\n    const { modes, inputuserInfo, textUserInfoComponent } = this.props;\n    const rows = [];\n    let element;\n    \n    return (\n      <div>\n        <ul>\n          {rows}\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass ExtendedUserInfo extends Component {\n  render() {\n    // const { modes, userInfoArray, textUserInfoComponent } = this.props;\n    // const rows = [];\n    // let element;\n\n    return (\n      <div>\n        {/* {rows} */}\n      </div>\n    )\n  }\n}\n\nclass UserInfo extends Component {\n  // changeInfoRowToEditMode = (element, arr) => {\n  //   this.props.changeInfoRowToEditMode(element, arr);\n  // };\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    const { modes, inputs, textDisplay } = this.props;\n\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicUserInfo\n          modes={modes}\n          inputUserInfo={inputs.userInfoComponentInput.inputUserInfo}\n          userInfoText={textDisplay.textUserInfoComponent}\n        />\n        <ExtendedUserInfo\n          modes={modes}\n          inputUserInfo={inputs.userInfoComponentInput.inputUserInfo}\n          userInfoText={textDisplay.textUserInfoComponent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}