{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExperienceHistoryRow extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass AddExperienceForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = e => {\n      e.preventDefault();\n      this.props.changeWorkExperienceMode();\n    };\n\n    this.handleInputChange = e => {\n      let target = e.target.name;\n      let field;\n\n      if (target === 'companyName') {\n        field = 'inputCompanyNameText';\n      } else if (target === 'city') {\n        field = 'inputCityText';\n      } else if (target === 'from') {\n        field = 'inputFromText';\n      } else if (target === 'to') {\n        field = 'inputToText';\n      } else if (target === 'jobDescription') {\n        field = 'inputJobDescriptionText';\n      }\n\n      this.props.handleInputChange(field, e.target.value);\n    };\n\n    this.addNewExperience = e => {\n      e.preventDefault();\n      this.props.addNewExperience();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        name: \"companyName\",\n        value: this.props.inputCompanyNameText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\",\n        name: \"city\",\n        value: this.props.inputCityText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\",\n        name: \"from\",\n        value: this.props.inputFromText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\",\n        name: \"to\",\n        value: this.props.inputToText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"30\",\n        name: \"jobDescription\",\n        placeholder: \"Job Description & Achievements\",\n        value: this.props.inputJobDescriptionText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.changeWorkExperienceMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewExperience,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeWorkExperienceMode,\n      children: \"+ Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WorkExperience extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => {\n      this.props.changeWorkExperienceMode();\n      this.props.turnOffUserInfoEditMode(this.props.userInfoArray);\n    };\n\n    this.handleInputChange = (field, element) => this.props.handleInputChange(field, element);\n\n    this.addNewExperience = () => this.props.addNewExperience();\n  }\n\n  render() {\n    const {\n      appMode,\n      workExperienceMode,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.props;\n    this.props.workExperienceArray.map(work => {});\n    let element;\n\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceBtn, {\n        changeWorkExperienceMode: this.changeWorkExperienceMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceForm, {\n        inputCompanyNameText: inputCompanyNameText,\n        inputCityText: inputCityText,\n        inputFromText: inputFromText,\n        inputToText: inputToText,\n        inputJobDescriptionText: inputJobDescriptionText,\n        changeWorkExperienceMode: this.changeWorkExperienceMode,\n        handleInputChange: this.handleInputChange,\n        addNewExperience: this.addNewExperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","ExperienceHistoryRow","render","AddExperienceForm","changeWorkExperienceMode","e","preventDefault","props","handleInputChange","target","name","field","value","addNewExperience","inputCompanyNameText","inputCityText","inputFromText","inputToText","inputJobDescriptionText","AddExperienceBtn","WorkExperience","turnOffUserInfoEditMode","userInfoArray","element","appMode","workExperienceMode","workExperienceArray","map","work","isEdit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAC3CE,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AAP0C;;AAU7C,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACxCI,wBADwC,GACZC,CAAD,IAAO;AAChCA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWH,wBAAX;AACD,KAJuC;;AAAA,SAKxCI,iBALwC,GAKnBH,CAAD,IAAO;AACzB,UAAII,MAAM,GAAGJ,CAAC,CAACI,MAAF,CAASC,IAAtB;AACA,UAAIC,KAAJ;;AACA,UAAIF,MAAM,KAAK,aAAf,EAA8B;AAC5BE,QAAAA,KAAK,GAAG,sBAAR;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,MAAf,EAAuB;AAC5BE,QAAAA,KAAK,GAAG,eAAR;AACD,OAFM,MAEA,IAAIF,MAAM,KAAK,MAAf,EAAuB;AAC5BE,QAAAA,KAAK,GAAG,eAAR;AACD,OAFM,MAEA,IAAIF,MAAM,KAAK,IAAf,EAAqB;AAC1BE,QAAAA,KAAK,GAAG,aAAR;AACD,OAFM,MAEA,IAAIF,MAAM,KAAK,gBAAf,EAAiC;AACtCE,QAAAA,KAAK,GAAG,yBAAR;AACD;;AACD,WAAKJ,KAAL,CAAWC,iBAAX,CAA6BG,KAA7B,EAAoCN,CAAC,CAACI,MAAF,CAASG,KAA7C;AACD,KApBuC;;AAAA,SAqBxCC,gBArBwC,GAqBpBR,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWM,gBAAX;AACD,KAxBuC;AAAA;;AAyBxCX,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,aAJP;AAKE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWO,oBALpB;AAME,QAAA,QAAQ,EAAE,KAAKN;AANjB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWQ,aALpB;AAME,QAAA,QAAQ,EAAE,KAAKP;AANjB;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWS,aALpB;AAME,QAAA,QAAQ,EAAE,KAAKR;AANjB;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,IAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,IAJP;AAKE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWU,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKT;AANjB;AAAA;AAAA;AAAA;AAAA,cAzBF,eAiCE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAC,gBAHP;AAIE,QAAA,WAAW,EAAC,gCAJd;AAKE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWW,uBALpB;AAME,QAAA,QAAQ,EAAE,KAAKV;AANjB;AAAA;AAAA;AAAA;AAAA,cAjCF,eAyCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKJ,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF,eA4CE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKS,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AA5EuC;;AA8E1C,MAAMM,gBAAN,SAA+BnB,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCI,wBADuC,GACZ,MAAM,KAAKG,KAAL,CAAWH,wBAAX,EADM;AAAA;;AAEvCF,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKE,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AANsC;;AASzC,MAAMgB,cAAN,SAA6BpB,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCI,wBADqC,GACV,MAAM;AAC/B,WAAKG,KAAL,CAAWH,wBAAX;AACA,WAAKG,KAAL,CAAWc,uBAAX,CAAmC,KAAKd,KAAL,CAAWe,aAA9C;AACD,KAJoC;;AAAA,SAKrCd,iBALqC,GAKjB,CAACG,KAAD,EAAQY,OAAR,KAClB,KAAKhB,KAAL,CAAWC,iBAAX,CAA6BG,KAA7B,EAAoCY,OAApC,CANmC;;AAAA,SAOrCV,gBAPqC,GAOlB,MAAM,KAAKN,KAAL,CAAWM,gBAAX,EAPY;AAAA;;AAQrCX,EAAAA,MAAM,GAAG;AACP,UAAM;AACJsB,MAAAA,OADI;AAEJC,MAAAA,kBAFI;AAGJX,MAAAA,oBAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA,aALI;AAMJC,MAAAA,WANI;AAOJC,MAAAA;AAPI,QAQF,KAAKX,KART;AASA,SAAKA,KAAL,CAAWmB,mBAAX,CAA+BC,GAA/B,CAAmCC,IAAI,IAAI,CAAE,CAA7C;AACA,QAAIL,OAAJ;;AACA,QAAIC,OAAO,CAACK,MAAR,IAAkB,CAACJ,kBAAkB,CAACI,MAA1C,EAAkD;AAChDN,MAAAA,OAAO,gBACL,QAAC,gBAAD;AACE,QAAA,wBAAwB,EAAE,KAAKnB;AADjC;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,QAAIoB,OAAO,CAACK,MAAR,IAAkBJ,kBAAkB,CAACI,MAAzC,EAAiD;AAC/CN,MAAAA,OAAO,gBACL,QAAC,iBAAD;AACE,QAAA,oBAAoB,EAAET,oBADxB;AAEE,QAAA,aAAa,EAAEC,aAFjB;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,WAAW,EAAEC,WAJf;AAKE,QAAA,uBAAuB,EAAEC,uBAL3B;AAME,QAAA,wBAAwB,EAAE,KAAKd,wBANjC;AAOE,QAAA,iBAAiB,EAAE,KAAKI,iBAP1B;AAQE,QAAA,gBAAgB,EAAE,KAAKK;AARzB;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGU,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhDoC;;AAmDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ExperienceHistoryRow extends Component {\n  render() {\n    return (\n    <div>\n\n    </div>\n    );\n  }\n}\n\nclass AddExperienceForm extends Component {\n  changeWorkExperienceMode = (e) => {\n    e.preventDefault();\n    this.props.changeWorkExperienceMode();\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let field;\n    if (target === 'companyName') {\n      field = 'inputCompanyNameText';\n    } else if (target === 'city') {\n      field = 'inputCityText';\n    } else if (target === 'from') {\n      field = 'inputFromText';\n    } else if (target === 'to') {\n      field = 'inputToText';\n    } else if (target === 'jobDescription') {\n      field = 'inputJobDescriptionText';\n    }\n    this.props.handleInputChange(field, e.target.value);\n  };\n  addNewExperience = (e) => {\n    e.preventDefault();\n    this.props.addNewExperience();\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"companyName\"\n          value={this.props.inputCompanyNameText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"city\"\n          value={this.props.inputCityText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"from\"\n          value={this.props.inputFromText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"to\"\n          value={this.props.inputToText}\n          onChange={this.handleInputChange}\n        ></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          name=\"jobDescription\"\n          placeholder=\"Job Description & Achievements\"\n          value={this.props.inputJobDescriptionText}\n          onChange={this.handleInputChange}\n        ></textarea>\n        <button type=\"submit\" onClick={this.changeWorkExperienceMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewExperience}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\nclass AddExperienceBtn extends Component {\n  changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  render() {\n    return (\n      <button onClick={this.changeWorkExperienceMode}>+ Experience</button>\n    );\n  }\n}\n\nclass WorkExperience extends Component {\n  changeWorkExperienceMode = () => {\n    this.props.changeWorkExperienceMode();\n    this.props.turnOffUserInfoEditMode(this.props.userInfoArray);\n  };\n  handleInputChange = (field, element) =>\n    this.props.handleInputChange(field, element);\n  addNewExperience = () => this.props.addNewExperience();\n  render() {\n    const {\n      appMode,\n      workExperienceMode,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.props;\n    this.props.workExperienceArray.map(work => {})\n    let element;\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n        />\n      );\n    }\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          inputCompanyNameText={inputCompanyNameText}\n          inputCityText={inputCityText}\n          inputFromText={inputFromText}\n          inputToText={inputToText}\n          inputJobDescriptionText={inputJobDescriptionText}\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n          handleInputChange={this.handleInputChange}\n          addNewExperience={this.addNewExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Experiences</h2>\n        \n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}