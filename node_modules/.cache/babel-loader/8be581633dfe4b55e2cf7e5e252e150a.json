{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicInfoEditMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputText = e => this.props.handleInputText();\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn();\n  }\n\n  render() {\n    const {\n      userInfo,\n      mode\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleUpdateBtn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: this.handleInputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfoPreviewMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [infoNameValueObj.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.turnOnEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n\n    this.handleInputText = e => this.props.handleInputText();\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn();\n  }\n\n  render() {\n    const userInfoArray = [];\n    const {\n      userInfo,\n      mode\n    } = this.props;\n\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (infoName === 'firstName' || infoName === 'lastName' || infoName === 'currentRole' || infoName === 'addr' || infoName === 'phone' || infoName === 'email' || infoName === 'github') {\n        userInfoArray.push({\n          [infoName]: infoNameValueObj\n        });\n      } else return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userInfoArray.map(userInfo => {\n        let display;\n        const userBasicInfo = Object.entries(userInfo);\n\n        if (mode.isPreview) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoPreviewMode, {\n            infoNameValueObj: userBasicInfo[0][1],\n            turnOnEditMode: this.turnOnEditMode\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (mode.isEdit) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoEditMode, {\n            handleInputText: this.handleInputText,\n            handleUpdateBtn: this.handleUpdateBtn\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 24\n          }, this);\n        }\n\n        return display;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = () => this.props.turnOnEditMode();\n\n    this.handleInputText = e => this.props.handleInputText();\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn();\n  }\n\n  render() {\n    const {\n      mode,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n        mode: mode,\n        userInfo: userInfo,\n        turnOnEditMode: this.turnOnEditMode,\n        handleInputText: this.handleInputText,\n        handleUpdateBtn: this.handleUpdateBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInfo, {\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","BasicInfoEditMode","handleInputText","e","props","handleUpdateBtn","render","userInfo","mode","BasicInfoPreviewMode","turnOnEditMode","infoNameValueObj","text","BasicInfo","userInfoArray","infoName","Object","entries","push","map","display","userBasicInfo","isPreview","id","isEdit","ContactInfo","UserInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass BasicInfoEditMode extends Component {\n  handleInputText = (e) => this.props.handleInputText();\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn();\n  render() {\n    const { userInfo, mode } = this.props;\n    return (\n      <form onSubmit={this.handleUpdateBtn}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={this.handleInputText}\n        />\n        <button type=\"submit\">Update</button>\n      </form>\n    );\n  }\n}\n\nclass BasicInfoPreviewMode extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  render() {\n    const { infoNameValueObj } = this.props;\n    return (\n      <p>\n        {infoNameValueObj.text} <span onClick={this.turnOnEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass BasicInfo extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  handleInputText = (e) => this.props.handleInputText();\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn();\n  render() {\n    const userInfoArray = [];\n    const { userInfo, mode } = this.props;\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (\n        infoName === 'firstName' ||\n        infoName === 'lastName' ||\n        infoName === 'currentRole' ||\n        infoName === 'addr' ||\n        infoName === 'phone' ||\n        infoName === 'email' ||\n        infoName === 'github'\n      ) {\n        userInfoArray.push({ [infoName]: infoNameValueObj });\n      } else return;\n    }\n    return (\n      <div>\n        {userInfoArray.map((userInfo) => {\n          let display;\n          const userBasicInfo = Object.entries(userInfo);\n          if (mode.isPreview) {\n            display = (\n              <BasicInfoPreviewMode\n                key={userBasicInfo[0][1].id}\n                infoNameValueObj={userBasicInfo[0][1]}\n                turnOnEditMode={this.turnOnEditMode}\n              />\n            );\n          }\n          if (mode.isEdit) {\n            display = (<BasicInfoEditMode \n              key={userBasicInfo[0][1].id}\n              handleInputText={this.handleInputText}\n              handleUpdateBtn={this.handleUpdateBtn}/>)\n          }\n          return display;\n        })}\n      </div>\n    );\n  }\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return <div className=\"ContactInfo\"></div>;\n  }\n}\n\nclass UserInfo extends Component {\n  turnOnEditMode = () => this.props.turnOnEditMode();\n  handleInputText = (e) => this.props.handleInputText();\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn();\n  render() {\n    const { mode, userInfo } = this.props;\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicInfo\n          mode={mode}\n          userInfo={userInfo}\n          turnOnEditMode={this.turnOnEditMode}\n          handleInputText={this.handleInputText}\n          handleUpdateBtn={this.handleUpdateBtn}\n        />\n        <ContactInfo userInfo={this.props.userInfo} />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}