{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport { getNextKeyDef } from '@testing-library/user-event/dist/keyboard/getNextKeyDef';\nimport React, { Component } from 'react';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  }\n\n  render() {\n    const {\n      modes,\n      text,\n      inputUserInfo\n    } = this.props;\n    let element;\n\n    if (modes.appMode.isEdit) {\n      if (text.isEdit) {\n        element = /*#__PURE__*/_jsxDEV(InfoRowForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this);\n      } else {\n        element = /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.changeInfoRowToEditMode,\n            children: \"\\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      element = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    }\n\n    return element;\n  }\n\n}\n\nclass BasicUserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  }\n\n  render() {\n    const {\n      modes,\n      inputUserInfo,\n      userInfoText\n    } = this.props;\n    const rows = [];\n    let element;\n\n    for (const [info, value] of Object.entries(userInfoText)) {\n      if (info === 'textFirstName' || info === 'textLastName') {\n        element = /*#__PURE__*/_jsxDEV(InfoRow, {\n          text: value.text,\n          modes: modes,\n          inputUserInfo: inputUserInfo\n        }, value.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n        rows.push(element);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ExtendedUserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  }\n\n  render() {\n    const {\n      modes,\n      inputUserInfo,\n      userInfoText\n    } = this.props;\n    const rows = [];\n    let element;\n\n    for (const [info, value] of Object.entries(userInfoText)) {\n      if (info === 'textFirstName' || info === 'textLastName') {\n        continue;\n      } else {\n        element = /*#__PURE__*/_jsxDEV(InfoRow, {\n          text: value.text,\n          modes: modes,\n          inputUserInfo: inputUserInfo\n        }, value.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n        rows.push(element);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  }\n\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    const {\n      modes,\n      inputs,\n      textDisplay\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicUserInfo, {\n        modes: modes,\n        inputUserInfo: inputs.userInfoComponentInput.inputUserInfo,\n        userInfoText: textDisplay.textUserInfoComponent,\n        changeInfoRowToEditMode: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExtendedUserInfo, {\n        modes: modes,\n        inputUserInfo: inputs.userInfoComponentInput.inputUserInfo,\n        userInfoText: textDisplay.textUserInfoComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["getNextKeyDef","React","Component","InfoRowForm","render","InfoRow","changeInfoRowToEditMode","props","modes","text","inputUserInfo","element","appMode","isEdit","BasicUserInfo","userInfoText","rows","info","value","Object","entries","id","push","ExtendedUserInfo","UserInfo","inputs","textDisplay","userInfoComponentInput","textUserInfoComponent"],"mappings":"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","sourcesContent":["import { getNextKeyDef } from '@testing-library/user-event/dist/keyboard/getNextKeyDef';\nimport React, { Component } from 'react';\nimport './UserInfo.css';\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return (\n      <form>\n        <input\n        // type=\"text\"\n        // autoComplete=\"off\"\n        // onChange\n        // value\n        ></input>\n        <button type=\"submit\">Update</button>\n      </form>\n    );\n  }\n}\n\nclass InfoRow extends Component {\n  changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  render() {\n    const { modes, text, inputUserInfo } = this.props;\n    let element;\n    if (modes.appMode.isEdit) {\n      if (text.isEdit) {\n        element = <InfoRowForm />;\n      } else {\n        element = (\n          <li>\n            {text} <span onClick={this.changeInfoRowToEditMode}>✎</span>\n          </li>\n        );\n      }\n    } else {\n      element = <li>{text}</li>;\n    }\n    return element;\n  }\n}\n\nclass BasicUserInfo extends Component {\n  changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  render() {\n    const { modes, inputUserInfo, userInfoText } = this.props;\n    const rows = [];\n    let element;\n    for (const [info, value] of Object.entries(userInfoText)) {\n      if (info === 'textFirstName'\n      || info === 'textLastName') {\n        element = (\n          <InfoRow\n            key={value.id}\n            text={value.text}\n            modes={modes}\n            inputUserInfo={inputUserInfo}\n          />\n        );\n        rows.push(element);\n      }\n    }\n    return (\n      <div>\n        <ul>{rows}</ul>\n      </div>\n    );\n  }\n}\n\nclass ExtendedUserInfo extends Component {\n  changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  render() {\n    const { modes, inputUserInfo, userInfoText } = this.props;\n    const rows = [];\n    let element;\n    for (const [info, value] of Object.entries(userInfoText)) {\n      if (info === 'textFirstName'\n      || info === 'textLastName') {\n        continue;\n      } else {\n        element = (\n          <InfoRow\n            key={value.id}\n            text={value.text}\n            modes={modes}\n            inputUserInfo={inputUserInfo}\n          />\n        );\n        rows.push(element);\n      }\n    }\n    return (\n      <div>\n        <ul>{rows}</ul>\n      </div>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  changeInfoRowToEditMode = () => this.props.changeInfoRowToEditMode();\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    const { modes, inputs, textDisplay } = this.props;\n\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicUserInfo\n          modes={modes}\n          inputUserInfo={inputs.userInfoComponentInput.inputUserInfo}\n          userInfoText={textDisplay.textUserInfoComponent}\n          changeInfoRowToEditMode\n        />\n        <ExtendedUserInfo\n          modes={modes}\n          inputUserInfo={inputs.userInfoComponentInput.inputUserInfo}\n          userInfoText={textDisplay.textUserInfoComponent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}