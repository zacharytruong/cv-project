{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/Education.js\";\nimport React, { Component } from 'react';\nimport './Education.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EducationHistoryRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.removeClickedTarget = e => this.props.removeClickedTarget(e.target, this.props.target, this.props.arrName);\n  }\n\n  render() {\n    const {\n      modes,\n      education\n    } = this.props;\n    let button;\n\n    if (modes.appMode.isEdit) {\n      button = /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.removeClickedTarget,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    } else button = null;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [education.textSchoolName, \", \", education.textSchoolCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [education.textSchoolFromYear, \" - \", education.textSchoolToYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: education.textSchoolDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddEducationForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeComponentMode = e => {\n      e.preventDefault();\n      this.props.changeComponentMode(this.props.componentModeName, false);\n    };\n\n    this.handleInputChange = e => {\n      let target = e.target.name;\n      let inputText = e.target.value;\n      this.props.handleInputChange(this.props.componentInputName, target, inputText);\n    };\n\n    this.addNewEducation = e => {\n      e.preventDefault();\n      this.props.addNewEducation();\n    };\n  }\n\n  render() {\n    const {\n      inputSchool,\n      inputSchoolCity,\n      inputSchoolFromYear,\n      inputSchoolToYear,\n      inputSchoolDegree\n    } = this.props.educationComponentInput;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        name: \"inputSchool\",\n        value: inputSchool,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\",\n        name: \"inputSchoolCity\",\n        value: inputSchoolCity,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\",\n        name: \"inputSchoolFromYear\",\n        value: inputSchoolFromYear,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\",\n        name: \"inputSchoolToYear\",\n        value: inputSchoolToYear,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Degree\",\n        autoComplete: \"off\",\n        name: \"inputSchoolDegree\",\n        value: inputSchoolDegree,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.changeComponentMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewEducation,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddEducationBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeComponentMode = () => this.props.changeComponentMode(this.props.componentModeName, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeComponentMode,\n      children: \"+ Education\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeComponentMode = (component, boolean) => {\n      this.props.changeComponentMode(component, boolean);\n    };\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n\n    this.addNewEducation = () => this.props.addNewEducation();\n\n    this.removeClickedTarget = (element, target, arr) => this.props.removeClickedTarget(element, target, arr);\n\n    this.componentModeName = 'educationMode';\n    this.componentInputName = 'educationComponentInput';\n    this.arrName = 'educationArray';\n    this.target = 'educationContainer';\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      educationComponentInput\n    } = this.props;\n    const educationArray = componentsArray.educationArray;\n    const rows = educationArray.map(education => /*#__PURE__*/_jsxDEV(EducationHistoryRow, {\n      modes: modes,\n      target: this.target,\n      arrName: this.arrName,\n      education: education,\n      removeClickedTarget: this.removeClickedTarget\n    }, education.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this));\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.educationMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddEducationBtn, {\n        componentModeName: this.componentModeName,\n        changeComponentMode: this.changeComponentMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.educationMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddEducationForm, {\n        educationComponentInput: educationComponentInput,\n        componentModeName: this.componentModeName,\n        componentInputName: this.componentInputName,\n        changeComponentMode: this.changeComponentMode,\n        handleInputChange: this.handleInputChange,\n        addNewEducation: this.addNewEducation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container education\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: this.target,\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Education;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/Education.js"],"names":["React","Component","EducationHistoryRow","removeClickedTarget","e","props","target","arrName","render","modes","education","button","appMode","isEdit","textSchoolName","textSchoolCity","textSchoolFromYear","textSchoolToYear","textSchoolDegree","AddEducationForm","changeComponentMode","preventDefault","componentModeName","handleInputChange","name","inputText","value","componentInputName","addNewEducation","inputSchool","inputSchoolCity","inputSchoolFromYear","inputSchoolToYear","inputSchoolDegree","educationComponentInput","AddEducationBtn","Education","constructor","component","boolean","componentProp","element","arr","componentsArray","educationArray","rows","map","id","educationMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Education.css';\n\nclass EducationHistoryRow extends Component {\n  removeClickedTarget = (e) =>\n    this.props.removeClickedTarget(\n      e.target,\n      this.props.target,\n      this.props.arrName\n    );\n  render() {\n    const { modes, education } = this.props;\n    let button;\n    if (modes.appMode.isEdit) {\n      button = (\n        <button type=\"submit\" onClick={this.removeClickedTarget}>\n          X\n        </button>\n      );\n    } else button = null;\n    return (\n      <div>\n        <div>\n          <p>\n            {education.textSchoolName}, {education.textSchoolCity}\n          </p>\n          <p>\n            {education.textSchoolFromYear} - {education.textSchoolToYear}\n          </p>\n        </div>\n        <div>\n          <p>{education.textSchoolDegree}</p>\n        </div>\n        {button}\n      </div>\n    );\n  }\n}\n\nclass AddEducationForm extends Component {\n  changeComponentMode = (e) => {\n    e.preventDefault();\n    this.props.changeComponentMode(this.props.componentModeName, false);\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let inputText = e.target.value;\n    this.props.handleInputChange(\n      this.props.componentInputName,\n      target,\n      inputText\n    );\n  };\n  addNewEducation = (e) => {\n    e.preventDefault();\n    this.props.addNewEducation();\n  };\n  render() {\n    const {\n      inputSchool,\n      inputSchoolCity,\n      inputSchoolFromYear,\n      inputSchoolToYear,\n      inputSchoolDegree\n    } = this.props.educationComponentInput;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"inputSchool\"\n          value={inputSchool}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"inputSchoolCity\"\n          value={inputSchoolCity}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"inputSchoolFromYear\"\n          value={inputSchoolFromYear}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"inputSchoolToYear\"\n          value={inputSchoolToYear}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Degree\"\n          autoComplete=\"off\"\n          name=\"inputSchoolDegree\"\n          value={inputSchoolDegree}\n          onChange={this.handleInputChange}\n        ></input>\n        <button type=\"submit\" onClick={this.changeComponentMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewEducation}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\n\nclass AddEducationBtn extends Component {\n  changeComponentMode = () =>\n    this.props.changeComponentMode(this.props.componentModeName, true);\n  render() {\n    return <button onClick={this.changeComponentMode}>+ Education</button>;\n  }\n}\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n    this.componentModeName = 'educationMode';\n    this.componentInputName = 'educationComponentInput';\n    this.arrName = 'educationArray';\n    this.target = 'educationContainer';\n  }\n  changeComponentMode = (component, boolean) => {\n    this.props.changeComponentMode(component, boolean);\n  };\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  addNewEducation = () => this.props.addNewEducation();\n  removeClickedTarget = (element, target, arr) =>\n    this.props.removeClickedTarget(element, target, arr);\n  render() {\n    const { modes, componentsArray, educationComponentInput } = this.props;\n    const educationArray = componentsArray.educationArray;\n    const rows = educationArray.map((education) => (\n      <EducationHistoryRow\n        modes={modes}\n        target={this.target}\n        arrName={this.arrName}\n        education={education}\n        key={education.id}\n        removeClickedTarget={this.removeClickedTarget}\n      />\n    ));\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.educationMode.isEdit) {\n      element = (\n        <AddEducationBtn\n          componentModeName={this.componentModeName}\n          changeComponentMode={this.changeComponentMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.educationMode.isEdit) {\n      element = (\n        <AddEducationForm\n          educationComponentInput={educationComponentInput}\n          componentModeName={this.componentModeName}\n          componentInputName={this.componentInputName}\n          changeComponentMode={this.changeComponentMode}\n          handleInputChange={this.handleInputChange}\n          addNewEducation={this.addNewEducation}\n        />\n      );\n    }\n    return (\n      <div className='container education'>\n        <h2>Education</h2>\n        <ul className={this.target}>{rows}</ul>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default Education;\n"]},"metadata":{},"sourceType":"module"}