{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicInfoEditMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n\n    this.editTextField = E;\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props; // let form;\n    // console.log(infoNameValueObj.id)\n\n    return; // <form onSubmit={this.handleUpdateBtn}>\n    //   <input\n    //     type=\"text\"\n    //     autoComplete=\"off\"\n    //     onChange={this.handleInputText}\n    //   />\n    //   <button type=\"submit\">Update</button>\n    // </form>\n  }\n\n}\n\nclass BasicInfoPreviewMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [infoNameValueObj.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.turnOnEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n  }\n\n  render() {\n    const userInfoArray = [];\n    const {\n      userInfo,\n      mode\n    } = this.props;\n\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (infoName === 'firstName' || infoName === 'lastName' || infoName === 'currentRole' || infoName === 'addr' || infoName === 'phone' || infoName === 'email' || infoName === 'github') {\n        userInfoArray.push({\n          [infoName]: infoNameValueObj\n        });\n      } else return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userInfoArray.map(userInfo => {\n        let display;\n        const userBasicInfo = Object.entries(userInfo);\n\n        if (mode.isPreview) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoPreviewMode, {\n            infoNameValueObj: userBasicInfo[0][1],\n            turnOnEditMode: this.turnOnEditMode\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (mode.isEdit) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoEditMode, {\n            infoNameValueObj: userBasicInfo[0][1],\n            handleInputText: this.handleInputText,\n            handleUpdateBtn: this.handleUpdateBtn\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 24\n          }, this);\n        }\n\n        return display;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = () => this.props.turnOnEditMode();\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n  }\n\n  render() {\n    const {\n      mode,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n        mode: mode,\n        userInfo: userInfo,\n        turnOnEditMode: this.turnOnEditMode,\n        handleInputText: this.handleInputText,\n        handleUpdateBtn: this.handleUpdateBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInfo, {\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","BasicInfoEditMode","handleInputText","e","props","handleUpdateBtn","editTextField","E","render","infoNameValueObj","BasicInfoPreviewMode","turnOnEditMode","text","BasicInfo","userInfoArray","userInfo","mode","infoName","Object","entries","push","map","display","userBasicInfo","isPreview","id","isEdit","ContactInfo","UserInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass BasicInfoEditMode extends Component {\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  editTextField = (E)\n  render() {\n    const { infoNameValueObj } = this.props;\n    // let form;\n    // console.log(infoNameValueObj.id)\n    \n    return \n      // <form onSubmit={this.handleUpdateBtn}>\n      //   <input\n      //     type=\"text\"\n      //     autoComplete=\"off\"\n      //     onChange={this.handleInputText}\n      //   />\n      //   <button type=\"submit\">Update</button>\n      // </form>\n    \n  }\n}\n\nclass BasicInfoPreviewMode extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  render() {\n    const { infoNameValueObj } = this.props;\n    return (\n      <p>\n        {infoNameValueObj.text} <span onClick={this.turnOnEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass BasicInfo extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  render() {\n    const userInfoArray = [];\n    const { userInfo, mode } = this.props;\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (\n        infoName === 'firstName' ||\n        infoName === 'lastName' ||\n        infoName === 'currentRole' ||\n        infoName === 'addr' ||\n        infoName === 'phone' ||\n        infoName === 'email' ||\n        infoName === 'github'\n      ) {\n        userInfoArray.push({ [infoName]: infoNameValueObj });\n      } else return;\n    }\n    return (\n      <div>\n        {userInfoArray.map((userInfo) => {\n          let display;\n          const userBasicInfo = Object.entries(userInfo);\n          if (mode.isPreview) {\n            display = (\n              <BasicInfoPreviewMode\n                key={userBasicInfo[0][1].id}\n                infoNameValueObj={userBasicInfo[0][1]}\n                turnOnEditMode={this.turnOnEditMode}\n              />\n            );\n          }\n          if (mode.isEdit) {\n            display = (<BasicInfoEditMode \n              key={userBasicInfo[0][1].id}\n              infoNameValueObj={userBasicInfo[0][1]}\n              handleInputText={this.handleInputText}\n              handleUpdateBtn={this.handleUpdateBtn}/>)\n          }\n          return display;\n        })}\n      </div>\n    );\n  }\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return <div className=\"ContactInfo\"></div>;\n  }\n}\n\nclass UserInfo extends Component {\n  turnOnEditMode = () => this.props.turnOnEditMode();\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  render() {\n    const { mode, userInfo } = this.props;\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicInfo\n          mode={mode}\n          userInfo={userInfo}\n          turnOnEditMode={this.turnOnEditMode}\n          handleInputText={this.handleInputText}\n          handleUpdateBtn={this.handleUpdateBtn}\n        />\n        <ContactInfo userInfo={this.props.userInfo} />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}