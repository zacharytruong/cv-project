{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeAppModeToEdit = () => {\n      this.setState({\n        appMode: {\n          isEdit: true\n        }\n      });\n    };\n\n    this.changeAppModeToNonEdit = () => {\n      this.setState({\n        appMode: {\n          isEdit: false\n        }\n      });\n    };\n\n    this.handleInputChange = (field, inputText) => {\n      this.setState({\n        [field]: inputText\n      });\n    };\n\n    this.findClickedTarget = element => {\n      const target = element.parentNode;\n      const parent = Array.from(target.parentNode.children);\n      return parent.indexOf(target);\n    };\n\n    this.handleUserInfoUpdateBtn = (field, element) => {\n      const index = this.findClickedTarget(element);\n      const tempArr = [...this.state.userInfoArray];\n      tempArr[index].text = this.state[field];\n      tempArr[index].mode.isEdit = false;\n      this.setState({\n        [field]: '',\n        userInfoArray: tempArr\n      });\n    };\n\n    this.changeInfoRowToEditMode = (element, arr) => {\n      const index = this.findClickedTarget(element);\n      const tempArr = [...arr];\n      tempArr.forEach(item => item.mode.isEdit = false);\n      tempArr[index].mode.isEdit = true;\n      this.setState({\n        [arr]: tempArr\n      });\n    };\n\n    this.turnOffUserInfoEditMode = arr => {\n      const tempArr = [...arr];\n      tempArr.forEach(item => item.mode.isEdit = false);\n      this.setState({\n        [arr]: tempArr\n      });\n    };\n\n    this.addNewExperience = () => {\n      const {\n        inputCompanyNameText,\n        inputCityText,\n        inputFromText,\n        inputToText,\n        inputJobDescriptionText\n      } = this.state;\n      const work = {\n        id: uniqid(),\n        companyNameText: inputCompanyNameText,\n        cityText: inputCityText,\n        fromText: inputFromText,\n        toText: inputToText,\n        jobDescriptionText: inputJobDescriptionText\n      };\n      this.setState({\n        workExperienceArray: this.state.workExperienceArray.concat(work),\n        workExperienceMode: {\n          isEdit: false\n        },\n        inputCompanyNameText: '',\n        inputCityText: '',\n        inputFromText: '',\n        inputToText: '',\n        inputJobDescriptionText: ''\n      });\n    };\n\n    this.addNewEducation = () => {\n      const {\n        inputSchoolText,\n        inputSchoolCityText,\n        inputSchoolFromYearText,\n        inputSchoolToYearText,\n        inputSchoolDegreeText\n      } = this.state;\n      const education = {\n        id: uniqid(),\n        schoolText: inputSchoolText,\n        schoolCityText: inputSchoolCityText,\n        schoolFromYeartText: inputSchoolFromYearText,\n        schoolToYearText: inputSchoolToYearText,\n        schoolDegreeText: inputSchoolDegreeText\n      };\n      this.setState({\n        educationArray: this.state.educationArray.concat(education),\n        educationMode: {\n          isEdit: false\n        },\n        inputSchoolText: '',\n        inputSchoolCityText: '',\n        inputSchoolFromYearText: '',\n        inputSchoolToYearText: '',\n        inputSchoolDegreeText: ''\n      });\n    };\n\n    this.removeWorkExperience = element => {\n      const index = this.findClickedTarget(element);\n      this.setState({\n        workExperienceArray: this.state.workExperienceArray.splice(index, 1)\n      });\n    };\n\n    this.removeEducationHistory = element => {\n      const index = this.findClickedTarget(element);\n      this.setState({\n        educationArray: this.state.educationArray.splice(index, 1)\n      });\n    };\n\n    this.changeUserInfoMode = () => {\n      let modeState = this.state.userInfoMode.isEdit;\n      modeState ? modeState = false : modeState = true;\n      this.setState({\n        userInfoMode: {\n          isEdit: modeState\n        }\n      });\n    };\n\n    this.changeWorkExperienceMode = () => {\n      let modeState = this.state.workExperienceMode.isEdit;\n      modeState ? modeState = false : modeState = true;\n      this.setState({\n        workExperienceMode: {\n          isEdit: modeState\n        }\n      });\n    };\n\n    this.changeEducationMode = () => {\n      let modeState = this.state.educationMode.isEdit;\n      modeState ? modeState = false : modeState = true;\n      this.setState({\n        educationMode: {\n          isEdit: modeState\n        }\n      });\n    };\n\n    this.state = {\n      inputText: '',\n      inputCompanyNameText: '',\n      inputCityText: '',\n      inputFromText: '',\n      inputToText: '',\n      inputJobDescriptionText: '',\n      inputSchoolText: '',\n      inputSchoolCityText: '',\n      inputSchoolFromYearText: '',\n      inputSchoolToYearText: '',\n      inputSchoolDegreeText: '',\n      appMode: {\n        isEdit: true\n      },\n      userInfoMode: {\n        isEdit: false\n      },\n      workExperienceMode: {\n        isEdit: false\n      },\n      educationMode: {\n        isEdit: false\n      },\n      userInfoArray: [{\n        name: 'firstName',\n        text: 'First Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'lastName',\n        text: 'Last Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'currentRole',\n        text: 'Fullstack Javascript Developer',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'address',\n        text: 'Houston, TX',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'phone',\n        text: '(555) 555-5555',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'email',\n        text: 'yourname@email.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'github',\n        text: 'https://github.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }],\n      workExperienceArray: [],\n      educationArray: []\n    };\n  }\n\n  render() {\n    const {\n      appMode,\n      userInfoMode,\n      workExperienceMode,\n      educationMode,\n      userInfoArray,\n      workExperienceArray,\n      inputText,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText,\n      inputSchoolText,\n      inputSchoolCityText,\n      inputSchoolFromYearText,\n      inputSchoolToYearText,\n      inputSchoolDegreeText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        appMode: appMode,\n        changeAppModeToEdit: this.changeAppModeToEdit,\n        changeAppModeToNonEdit: this.changeAppModeToNonEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Builder, {\n        appMode: appMode,\n        userInfoMode: userInfoMode,\n        workExperienceMode: workExperienceMode,\n        educationMode: educationMode,\n        userInfoArray: userInfoArray,\n        workExperienceArray: workExperienceArray,\n        educationArray: educationArray,\n        inputText: inputText,\n        inputCompanyNameText: inputCompanyNameText,\n        inputCityText: inputCityText,\n        inputFromText: inputFromText,\n        inputToText: inputToText,\n        inputJobDescriptionText: inputJobDescriptionText,\n        changeInfoRowToEditMode: this.changeInfoRowToEditMode,\n        handleInputChange: this.handleInputChange,\n        handleUserInfoUpdateBtn: this.handleUserInfoUpdateBtn,\n        changeWorkExperienceMode: this.changeWorkExperienceMode,\n        turnOffUserInfoEditMode: this.turnOffUserInfoEditMode,\n        addNewExperience: this.addNewExperience,\n        removeWorkExperience: this.removeWorkExperience,\n        inputSchoolText: inputSchoolText,\n        inputSchoolCityText: inputSchoolCityText,\n        inputSchoolFromYearText: inputSchoolFromYearText,\n        inputSchoolToYearText: inputSchoolToYearText,\n        inputSchoolDegreeText: inputSchoolDegreeText,\n        changeEducationMode: this.changeEducationMode,\n        addNewEducation: this.addNewEducation,\n        removeEducationHistory: this.removeEducationHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/App.js"],"names":["React","Header","Builder","Footer","uniqid","App","Component","constructor","props","changeAppModeToEdit","setState","appMode","isEdit","changeAppModeToNonEdit","handleInputChange","field","inputText","findClickedTarget","element","target","parentNode","parent","Array","from","children","indexOf","handleUserInfoUpdateBtn","index","tempArr","state","userInfoArray","text","mode","changeInfoRowToEditMode","arr","forEach","item","turnOffUserInfoEditMode","addNewExperience","inputCompanyNameText","inputCityText","inputFromText","inputToText","inputJobDescriptionText","work","id","companyNameText","cityText","fromText","toText","jobDescriptionText","workExperienceArray","concat","workExperienceMode","addNewEducation","inputSchoolText","inputSchoolCityText","inputSchoolFromYearText","inputSchoolToYearText","inputSchoolDegreeText","education","schoolText","schoolCityText","schoolFromYeartText","schoolToYearText","schoolDegreeText","educationArray","educationMode","removeWorkExperience","splice","removeEducationHistory","changeUserInfoMode","modeState","userInfoMode","changeWorkExperienceMode","changeEducationMode","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      inputCompanyNameText: '',\n      inputCityText: '',\n      inputFromText: '',\n      inputToText: '',\n      inputJobDescriptionText: '',\n      inputSchoolText: '',\n      inputSchoolCityText: '',\n      inputSchoolFromYearText: '',\n      inputSchoolToYearText: '',\n      inputSchoolDegreeText: '',\n      appMode: {\n        isEdit: true\n      },\n      userInfoMode: {\n        isEdit: false\n      },\n      workExperienceMode: {\n        isEdit: false\n      },\n      educationMode: {\n        isEdit: false\n      },\n      userInfoArray: [\n        {\n          name: 'firstName',\n          text: 'First Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'lastName',\n          text: 'Last Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'currentRole',\n          text: 'Fullstack Javascript Developer',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'address',\n          text: 'Houston, TX',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'phone',\n          text: '(555) 555-5555',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'email',\n          text: 'yourname@email.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'github',\n          text: 'https://github.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        }\n      ],\n      workExperienceArray: [],\n      educationArray: []\n    };\n  }\n  changeAppModeToEdit = () => {\n    this.setState({\n      appMode: {\n        isEdit: true\n      }\n    });\n  };\n  changeAppModeToNonEdit = () => {\n    this.setState({\n      appMode: {\n        isEdit: false\n      }\n    });\n  };\n  handleInputChange = (field, inputText) => {\n    this.setState({\n      [field]: inputText\n    });\n  };\n  findClickedTarget = (element) => {\n    const target = element.parentNode;\n    const parent = Array.from(target.parentNode.children);\n    return parent.indexOf(target);\n  };\n  handleUserInfoUpdateBtn = (field, element) => {\n    const index = this.findClickedTarget(element);\n    const tempArr = [...this.state.userInfoArray];\n    tempArr[index].text = this.state[field];\n    tempArr[index].mode.isEdit = false;\n    this.setState({\n      [field]: '',\n      userInfoArray: tempArr\n    });\n  };\n  \n  changeInfoRowToEditMode = (element, arr) => {\n    const index = this.findClickedTarget(element);\n    const tempArr = [...arr];\n    tempArr.forEach((item) => (item.mode.isEdit = false));\n    tempArr[index].mode.isEdit = true;\n    this.setState({\n      [arr]: tempArr\n    });\n  };\n  turnOffUserInfoEditMode = (arr) => {\n    const tempArr = [...arr];\n    tempArr.forEach((item) => (item.mode.isEdit = false));\n    this.setState({\n      [arr]: tempArr\n    });\n  };\n  addNewExperience = () => {\n    const {\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.state;\n    const work = {\n      id: uniqid(),\n      companyNameText: inputCompanyNameText,\n      cityText: inputCityText,\n      fromText: inputFromText,\n      toText: inputToText,\n      jobDescriptionText: inputJobDescriptionText\n    };\n    this.setState({\n      workExperienceArray: this.state.workExperienceArray.concat(work),\n      workExperienceMode: {\n        isEdit: false\n      },\n      inputCompanyNameText: '',\n      inputCityText: '',\n      inputFromText: '',\n      inputToText: '',\n      inputJobDescriptionText: ''\n    });\n  };\n  addNewEducation = () => {\n    const {\n      inputSchoolText,\n      inputSchoolCityText,\n      inputSchoolFromYearText,\n      inputSchoolToYearText,\n      inputSchoolDegreeText\n    } = this.state;\n    const education = {\n      id: uniqid(),\n      schoolText: inputSchoolText,\n      schoolCityText: inputSchoolCityText,\n      schoolFromYeartText: inputSchoolFromYearText,\n      schoolToYearText: inputSchoolToYearText,\n      schoolDegreeText: inputSchoolDegreeText\n    };\n    this.setState({\n      educationArray: this.state.educationArray.concat(education),\n      educationMode: {\n        isEdit: false\n      },\n      inputSchoolText: '',\n      inputSchoolCityText: '',\n      inputSchoolFromYearText: '',\n      inputSchoolToYearText: '',\n      inputSchoolDegreeText: ''\n    });\n  };\n  removeWorkExperience = (element) => {\n    const index = this.findClickedTarget(element);\n    this.setState({\n      workExperienceArray: this.state.workExperienceArray.splice(index, 1)\n    });\n  };\n  removeEducationHistory = (element) => {\n    const index = this.findClickedTarget(element);\n    this.setState({\n      educationArray: this.state.educationArray.splice(index, 1)\n    });\n  };\n  changeUserInfoMode = () => {\n    let modeState = this.state.userInfoMode.isEdit;\n    modeState ? (modeState = false) : (modeState = true);\n    this.setState({\n      userInfoMode: {\n        isEdit: modeState\n      }\n    });\n  };\n  changeWorkExperienceMode = () => {\n    let modeState = this.state.workExperienceMode.isEdit;\n    modeState ? (modeState = false) : (modeState = true);\n    this.setState({\n      workExperienceMode: {\n        isEdit: modeState\n      }\n    });\n  };\n  changeEducationMode = () => {\n    let modeState = this.state.educationMode.isEdit;\n    modeState ? (modeState = false) : (modeState = true);\n    this.setState({\n      educationMode: {\n        isEdit: modeState\n      }\n    });\n  };\n  render() {\n    const {\n      appMode,\n      userInfoMode,\n      workExperienceMode,\n      educationMode,\n      userInfoArray,\n      workExperienceArray,\n      inputText,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText,\n      inputSchoolText,\n      inputSchoolCityText,\n      inputSchoolFromYearText,\n      inputSchoolToYearText,\n      inputSchoolDegreeText\n    } = this.state;\n    return (\n      <div className=\"appContainer\">\n        <Header\n          appMode={appMode}\n          changeAppModeToEdit={this.changeAppModeToEdit}\n          changeAppModeToNonEdit={this.changeAppModeToNonEdit}\n        />\n        <Builder\n          appMode={appMode}\n          userInfoMode={userInfoMode}\n          workExperienceMode={workExperienceMode}\n          educationMode={educationMode}\n          userInfoArray={userInfoArray}\n          workExperienceArray={workExperienceArray}\n          educationArray={educationArray}\n          inputText={inputText}\n          inputCompanyNameText={inputCompanyNameText}\n          inputCityText={inputCityText}\n          inputFromText={inputFromText}\n          inputToText={inputToText}\n          inputJobDescriptionText={inputJobDescriptionText}\n          changeInfoRowToEditMode={this.changeInfoRowToEditMode}\n          handleInputChange={this.handleInputChange}\n          handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n          turnOffUserInfoEditMode={this.turnOffUserInfoEditMode}\n          addNewExperience={this.addNewExperience}\n          removeWorkExperience={this.removeWorkExperience}\n          inputSchoolText={inputSchoolText}\n          inputSchoolCityText={inputSchoolCityText}\n          inputSchoolFromYearText={inputSchoolFromYearText}\n          inputSchoolToYearText={inputSchoolToYearText}\n          inputSchoolDegreeText={inputSchoolDegreeText}\n          changeEducationMode={this.changeEducationMode}\n          addNewEducation={this.addNewEducation}\n          removeEducationHistory={this.removeEducationHistory}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}