{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport './UserInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: this.handleInputChange,\n        value: this.props.inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleUserInfoUpdateBtn,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InfoRowNonEditMode extends Component {\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: info.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  // changeInfoRowToEditMode = (e) =>\n  //   this.props.changeInfoRowToEditMode(e.target, this.props.userInfoArray);\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [info.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeInfoRowToEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  // changeInfoRowToEditMode = (element, arr) => {\n  //   this.props.changeInfoRowToEditMode(element, arr);\n  // };\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    // const { appMode , userInfoArray } = this.props;\n    // const display = [];\n    // userInfoArray.map((info) => {\n    //   if (appMode.isEdit && !info.mode.isEdit) {\n    //     display.push(\n    //       <InfoRow\n    //         info={info}\n    //         key={info.id}\n    //         userInfoArray={userInfoArray}\n    //         changeInfoRowToEditMode={this.changeInfoRowToEditMode}\n    //       />\n    //     );\n    //   }\n    //   if (appMode.isEdit && info.mode.isEdit) {\n    //     display.push(\n    //       <InfoRowForm\n    //         info={info}\n    //         key={info.id}\n    //         inputText={this.props.inputText}\n    //         handleInputChange={this.handleInputChange}\n    //         handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n    //       />\n    //     );\n    //   }\n    //   if (!appMode.isEdit && !info.mode.isEdit) {\n    //     display.push(<InfoRowNonEditMode info={info} key={info.id} />);\n    //   }\n    //   return display;\n    // });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","InfoRowForm","render","handleInputChange","props","inputText","handleUserInfoUpdateBtn","InfoRowNonEditMode","info","text","InfoRow","changeInfoRowToEditMode","UserInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,QAAQ,EAAE,KAAKC,iBAHjB;AAIE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAJpB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKC,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAtBiC;;AAyBpC,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;AACzCE,EAAAA,MAAM,GAAG;AACP,UAAMM,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AACA,wBAAO;AAAA,gBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAJwC;;AAO3C,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC9B;AACA;AACAE,EAAAA,MAAM,GAAG;AACP,UAAMM,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AACA,wBACE;AAAA,iBACGA,IAAI,CAACC,IADR,eAEE;AAAM,QAAA,OAAO,EAAE,KAAKE,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAX6B;;AAchC,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAzC8B;;AA4CjC,eAAeU,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './UserInfo.css';\n\nclass InfoRowForm extends Component {\n  // handleInputChange = (e) => {\n  //   this.props.handleInputChange('inputText', e.target.value);\n  // };\n  // handleUserInfoUpdateBtn = (e) => {\n  //   e.preventDefault();\n  //   this.props.handleUserInfoUpdateBtn('inputText', e.target);\n  // };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={this.handleInputChange}\n          value={this.props.inputText}\n        ></input>\n        <button type=\"submit\" onClick={this.handleUserInfoUpdateBtn}>\n          Update\n        </button>\n      </form>\n    );\n  }\n}\n\nclass InfoRowNonEditMode extends Component {\n  render() {\n    const info = this.props.info;\n    return <p>{info.text}</p>;\n  }\n}\n\nclass InfoRow extends Component {\n  // changeInfoRowToEditMode = (e) =>\n  //   this.props.changeInfoRowToEditMode(e.target, this.props.userInfoArray);\n  render() {\n    const info = this.props.info;\n    return (\n      <p>\n        {info.text}\n        <span onClick={this.changeInfoRowToEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  // changeInfoRowToEditMode = (element, arr) => {\n  //   this.props.changeInfoRowToEditMode(element, arr);\n  // };\n  // handleInputChange = (field, element) => {\n  //   this.props.handleInputChange(field, element);\n  // };\n  // handleUserInfoUpdateBtn = (field, element) => {\n  //   this.props.handleUserInfoUpdateBtn(field, element);\n  // };\n  render() {\n    // const { appMode , userInfoArray } = this.props;\n    // const display = [];\n    // userInfoArray.map((info) => {\n    //   if (appMode.isEdit && !info.mode.isEdit) {\n    //     display.push(\n    //       <InfoRow\n    //         info={info}\n    //         key={info.id}\n    //         userInfoArray={userInfoArray}\n    //         changeInfoRowToEditMode={this.changeInfoRowToEditMode}\n    //       />\n    //     );\n    //   }\n    //   if (appMode.isEdit && info.mode.isEdit) {\n    //     display.push(\n    //       <InfoRowForm\n    //         info={info}\n    //         key={info.id}\n    //         inputText={this.props.inputText}\n    //         handleInputChange={this.handleInputChange}\n    //         handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n    //       />\n    //     );\n    //   }\n    //   if (!appMode.isEdit && !info.mode.isEdit) {\n    //     display.push(<InfoRowNonEditMode info={info} key={info.id} />);\n    //   }\n    //   return display;\n    // });\n    return <div className=\"UserInfoContainer\"></div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}