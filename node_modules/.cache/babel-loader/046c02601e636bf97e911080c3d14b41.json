{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputChange = e => {\n      this.props.handleInputChange(e.target.value);\n    };\n\n    this.handleUpdateBtn = e => {\n      e.preventDefault();\n      this.props.handleUpdateBtn(e.target);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: this.handleInputChange,\n        value: this.props.inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleUpdateBtn,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InfoRowNonEditMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeUserInfoToEditMode = e => this.props.changeUserInfoToEditMode(e.target);\n  }\n\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: info.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeUserInfoToEditMode = e => this.props.changeUserInfoToEditMode(e.target);\n  }\n\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [info.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeUserInfoToEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeUserInfoToEditMode = element => {\n      this.props.changeUserInfoToEditMode(element);\n    };\n\n    this.handleInputChange = element => {\n      this.props.handleInputChange(element);\n    };\n\n    this.handleUpdateBtn = element => {\n      this.props.handleUpdateBtn(element);\n    };\n  }\n\n  render() {\n    const appMode = this.props.appMode;\n    const display = [];\n    this.props.userInfoArray.map(info => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRow, {\n          info: info,\n          changeUserInfoToEditMode: this.changeUserInfoToEditMode\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowForm, {\n          info: info,\n          inputText: this.props.inputText,\n          handleInputChange: this.handleInputChange,\n          handleUpdateBtn: this.handleUpdateBtn\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowNonEditMode, {\n          info: info\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this));\n      }\n\n      return display;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","uniqid","InfoRowForm","handleInputChange","e","props","target","value","handleUpdateBtn","preventDefault","render","inputText","InfoRowNonEditMode","changeUserInfoToEditMode","info","text","InfoRow","UserInfo","element","appMode","display","userInfoArray","map","isEdit","mode","push","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass InfoRowForm extends Component {\n  handleInputChange = (e) => {\n    this.props.handleInputChange(e.target.value);\n  };\n  handleUpdateBtn = (e) => {\n    e.preventDefault();\n    this.props.handleUpdateBtn(e.target);\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={this.handleInputChange}\n          value={this.props.inputText}\n        ></input>\n        <button type=\"submit\" onClick={this.handleUpdateBtn}>\n          Update\n        </button>\n      </form>\n    );\n  }\n}\n\nclass InfoRowNonEditMode extends Component {\n  changeUserInfoToEditMode = (e) =>\n    this.props.changeUserInfoToEditMode(e.target);\n  render() {\n    const info = this.props.info;\n    return <p>{info.text}</p>;\n  }\n}\n\nclass InfoRow extends Component {\n  changeUserInfoToEditMode = (e) =>\n    this.props.changeUserInfoToEditMode(e.target);\n  render() {\n    const info = this.props.info;\n    return (\n      <p>\n        {info.text}\n        <span onClick={this.changeUserInfoToEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  changeUserInfoToEditMode = (element) => {\n    this.props.changeUserInfoToEditMode(element);\n  };\n  handleInputChange = (element) => {\n    this.props.handleInputChange(element);\n  };\n  handleUpdateBtn = (element) => {\n    this.props.handleUpdateBtn(element);\n  };\n  render() {\n    const appMode = this.props.appMode;\n    const display = [];\n    this.props.userInfoArray.map((info) => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push(\n          <InfoRow\n            info={info}\n            key={info.id}\n            changeUserInfoToEditMode={this.changeUserInfoToEditMode}\n          />\n        );\n      }\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push(\n          <InfoRowForm\n            info={info}\n            key={info.id}\n            inputText={this.props.inputText}\n            handleInputChange={this.handleInputChange}\n            handleUpdateBtn={this.handleUpdateBtn}\n          />\n        );\n      }\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push(<InfoRowNonEditMode info={info} key={info.id} />);\n      }\n      return display;\n    });\n    return <div className=\"UserInfoContainer\">{display}</div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}