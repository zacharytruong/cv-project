{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeAppModeToEdit = () => {\n      this.setState({\n        appMode: {\n          isEdit: true\n        }\n      });\n    };\n\n    this.changeAppModeToNonEdit = () => {\n      this.setState({\n        appMode: {\n          isEdit: false\n        }\n      });\n    };\n\n    this.handleInputChange = (field, inputText) => {\n      this.setState({\n        [field]: inputText\n      });\n    };\n\n    this.findClickedTarget = element => {\n      const target = element.parentNode;\n      const parent = Array.from(target.parentNode.children);\n      return parent.indexOf(target);\n    };\n\n    this.turnOffEditMode = arr;\n\n    this.handleUserInfoUpdateBtn = (field, element) => {\n      const index = this.findClickedTarget(element);\n      const tempArr = [...this.state.userInfoArray];\n      tempArr[index].text = this.state[field];\n      tempArr[index].mode.isEdit = false;\n      this.setState({\n        [field]: '',\n        userInfoArray: tempArr\n      });\n    };\n\n    this.changeInfoRowToEditMode = (element, arr) => {\n      const index = this.findClickedTarget(element);\n      const tempArr = [...arr];\n      tempArr.forEach(item => item.mode.isEdit = false);\n      tempArr[index].mode.isEdit = true;\n      this.setState({\n        [arr]: tempArr\n      });\n    };\n\n    this.addNewExperience = () => {};\n\n    this.state = {\n      inputText: '',\n      inputCompanyNameText: '',\n      inputCityText: '',\n      inputFromText: '',\n      inputToText: '',\n      inputJobDescriptionText: '',\n      appMode: {\n        isEdit: true\n      },\n      userInfoArray: [{\n        name: 'firstName',\n        text: 'First Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'lastName',\n        text: 'Last Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'currentRole',\n        text: 'Fullstack Javascript Developer',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'address',\n        text: 'Houston, TX',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'phone',\n        text: '(555) 555-5555',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'email',\n        text: 'yourname@email.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'github',\n        text: 'https://github.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }],\n      workExperienceArray: []\n    };\n  }\n\n  render() {\n    const {\n      appMode,\n      userInfoArray,\n      workExperienceArray,\n      inputText,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        appMode: appMode,\n        changeAppModeToEdit: this.changeAppModeToEdit,\n        changeAppModeToNonEdit: this.changeAppModeToNonEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Builder, {\n        appMode: appMode,\n        inputText: inputText,\n        inputCompanyNameText: inputCompanyNameText,\n        inputCityText: inputCityText,\n        inputFromText: inputFromText,\n        inputToText: inputToText,\n        inputJobDescriptionText: inputJobDescriptionText,\n        userInfoArray: userInfoArray,\n        workExperienceArray: workExperienceArray,\n        changeInfoRowToEditMode: this.changeInfoRowToEditMode,\n        handleInputChange: this.handleInputChange,\n        handleUserInfoUpdateBtn: this.handleUserInfoUpdateBtn,\n        addNewExperience: this.addNewExperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/App.js"],"names":["React","Header","Builder","Footer","uniqid","App","Component","constructor","props","changeAppModeToEdit","setState","appMode","isEdit","changeAppModeToNonEdit","handleInputChange","field","inputText","findClickedTarget","element","target","parentNode","parent","Array","from","children","indexOf","turnOffEditMode","arr","handleUserInfoUpdateBtn","index","tempArr","state","userInfoArray","text","mode","changeInfoRowToEditMode","forEach","item","addNewExperience","inputCompanyNameText","inputCityText","inputFromText","inputToText","inputJobDescriptionText","name","id","workExperienceArray","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyEnBC,mBAzEmB,GAyEG,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AADG,OAAd;AAKD,KA/EkB;;AAAA,SAgFnBC,sBAhFmB,GAgFM,MAAM;AAC7B,WAAKH,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AADG,OAAd;AAKD,KAtFkB;;AAAA,SAuFnBE,iBAvFmB,GAuFC,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACxC,WAAKN,QAAL,CAAc;AACZ,SAACK,KAAD,GAASC;AADG,OAAd;AAGD,KA3FkB;;AAAA,SA4FnBC,iBA5FmB,GA4FEC,OAAD,IAAa;AAC/B,YAAMC,MAAM,GAAGD,OAAO,CAACE,UAAvB;AACA,YAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACC,UAAP,CAAkBI,QAA7B,CAAf;AACA,aAAOH,MAAM,CAACI,OAAP,CAAeN,MAAf,CAAP;AACD,KAhGkB;;AAAA,SAiGnBO,eAjGmB,GAiGAC,GAjGA;;AAAA,SAkGnBC,uBAlGmB,GAkGO,CAACb,KAAD,EAAQG,OAAR,KAAoB;AAC5C,YAAMW,KAAK,GAAG,KAAKZ,iBAAL,CAAuBC,OAAvB,CAAd;AACA,YAAMY,OAAO,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,aAAf,CAAhB;AACAF,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeI,IAAf,GAAsB,KAAKF,KAAL,CAAWhB,KAAX,CAAtB;AACAe,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeK,IAAf,CAAoBtB,MAApB,GAA6B,KAA7B;AACA,WAAKF,QAAL,CAAc;AACZ,SAACK,KAAD,GAAS,EADG;AAEZiB,QAAAA,aAAa,EAAEF;AAFH,OAAd;AAID,KA3GkB;;AAAA,SA4GnBK,uBA5GmB,GA4GO,CAACjB,OAAD,EAAUS,GAAV,KAAkB;AAC1C,YAAME,KAAK,GAAG,KAAKZ,iBAAL,CAAuBC,OAAvB,CAAd;AACA,YAAMY,OAAO,GAAG,CAAC,GAAGH,GAAJ,CAAhB;AACAG,MAAAA,OAAO,CAACM,OAAR,CAAiBC,IAAD,IAAWA,IAAI,CAACH,IAAL,CAAUtB,MAAV,GAAmB,KAA9C;AACAkB,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeK,IAAf,CAAoBtB,MAApB,GAA6B,IAA7B;AACA,WAAKF,QAAL,CAAc;AACZ,SAACiB,GAAD,GAAOG;AADK,OAAd;AAGD,KApHkB;;AAAA,SAqHnBQ,gBArHmB,GAqHA,MAAM,CAAE,CArHR;;AAEjB,SAAKP,KAAL,GAAa;AACXf,MAAAA,SAAS,EAAE,EADA;AAEXuB,MAAAA,oBAAoB,EAAE,EAFX;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,uBAAuB,EAAE,EANd;AAOXhC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD,OAPE;AAUXoB,MAAAA,aAAa,EAAE,CACb;AACEY,QAAAA,IAAI,EAAE,WADR;AAEEX,QAAAA,IAAI,EAAE,YAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OADa,EASb;AACEgC,QAAAA,IAAI,EAAE,UADR;AAEEX,QAAAA,IAAI,EAAE,WAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OATa,EAiBb;AACEgC,QAAAA,IAAI,EAAE,aADR;AAEEX,QAAAA,IAAI,EAAE,gCAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OAjBa,EAyBb;AACEgC,QAAAA,IAAI,EAAE,SADR;AAEEX,QAAAA,IAAI,EAAE,aAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OAzBa,EAiCb;AACEgC,QAAAA,IAAI,EAAE,OADR;AAEEX,QAAAA,IAAI,EAAE,gBAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OAjCa,EAyCb;AACEgC,QAAAA,IAAI,EAAE,OADR;AAEEX,QAAAA,IAAI,EAAE,oBAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OAzCa,EAiDb;AACEgC,QAAAA,IAAI,EAAE,QADR;AAEEX,QAAAA,IAAI,EAAE,oBAFR;AAGEY,QAAAA,EAAE,EAAEzC,MAAM,EAHZ;AAIE8B,QAAAA,IAAI,EAAE;AACJtB,UAAAA,MAAM,EAAE;AADJ;AAJR,OAjDa,CAVJ;AAoEXkC,MAAAA,mBAAmB,EAAE;AApEV,KAAb;AAsED;;AA8CDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJpC,MAAAA,OADI;AAEJqB,MAAAA,aAFI;AAGJc,MAAAA,mBAHI;AAIJ9B,MAAAA,SAJI;AAKJuB,MAAAA,oBALI;AAMJC,MAAAA,aANI;AAOJC,MAAAA,aAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAKZ,KAVT;AAWA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEpB,OADX;AAEE,QAAA,mBAAmB,EAAE,KAAKF,mBAF5B;AAGE,QAAA,sBAAsB,EAAE,KAAKI;AAH/B;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,OAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,SAAS,EAAEK,SAFb;AAGE,QAAA,oBAAoB,EAAEuB,oBAHxB;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,aAAa,EAAEC,aALjB;AAME,QAAA,WAAW,EAAEC,WANf;AAOE,QAAA,uBAAuB,EAAEC,uBAP3B;AAQE,QAAA,aAAa,EAAEX,aARjB;AASE,QAAA,mBAAmB,EAAEc,mBATvB;AAUE,QAAA,uBAAuB,EAAE,KAAKX,uBAVhC;AAWE,QAAA,iBAAiB,EAAE,KAAKrB,iBAX1B;AAYE,QAAA,uBAAuB,EAAE,KAAKc,uBAZhC;AAaE,QAAA,gBAAgB,EAAE,KAAKU;AAbzB;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA5J+B;;AA+JlC,eAAejC,GAAf","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Builder from './components/Builder';\nimport Footer from './components/Footer';\nimport uniqid from 'uniqid';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      inputCompanyNameText: '',\n      inputCityText: '',\n      inputFromText: '',\n      inputToText: '',\n      inputJobDescriptionText: '',\n      appMode: {\n        isEdit: true\n      },\n      userInfoArray: [\n        {\n          name: 'firstName',\n          text: 'First Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'lastName',\n          text: 'Last Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'currentRole',\n          text: 'Fullstack Javascript Developer',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'address',\n          text: 'Houston, TX',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'phone',\n          text: '(555) 555-5555',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'email',\n          text: 'yourname@email.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'github',\n          text: 'https://github.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        }\n      ],\n      workExperienceArray: []\n    };\n  }\n  changeAppModeToEdit = () => {\n    this.setState({\n      appMode: {\n        isEdit: true\n      }\n    });\n  };\n  changeAppModeToNonEdit = () => {\n    this.setState({\n      appMode: {\n        isEdit: false\n      }\n    });\n  };\n  handleInputChange = (field, inputText) => {\n    this.setState({\n      [field]: inputText\n    });\n  };\n  findClickedTarget = (element) => {\n    const target = element.parentNode;\n    const parent = Array.from(target.parentNode.children);\n    return parent.indexOf(target);\n  };\n  turnOffEditMode = (arr)\n  handleUserInfoUpdateBtn = (field, element) => {\n    const index = this.findClickedTarget(element);\n    const tempArr = [...this.state.userInfoArray];\n    tempArr[index].text = this.state[field];\n    tempArr[index].mode.isEdit = false;\n    this.setState({\n      [field]: '',\n      userInfoArray: tempArr\n    });\n  };\n  changeInfoRowToEditMode = (element, arr) => {\n    const index = this.findClickedTarget(element);\n    const tempArr = [...arr];\n    tempArr.forEach((item) => (item.mode.isEdit = false));\n    tempArr[index].mode.isEdit = true;\n    this.setState({\n      [arr]: tempArr\n    });\n  };\n  addNewExperience = () => {};\n  render() {\n    const {\n      appMode,\n      userInfoArray,\n      workExperienceArray,\n      inputText,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.state;\n    return (\n      <div className=\"appContainer\">\n        <Header\n          appMode={appMode}\n          changeAppModeToEdit={this.changeAppModeToEdit}\n          changeAppModeToNonEdit={this.changeAppModeToNonEdit}\n        />\n        <Builder\n          appMode={appMode}\n          inputText={inputText}\n          inputCompanyNameText={inputCompanyNameText}\n          inputCityText={inputCityText}\n          inputFromText={inputFromText}\n          inputToText={inputToText}\n          inputJobDescriptionText={inputJobDescriptionText}\n          userInfoArray={userInfoArray}\n          workExperienceArray={workExperienceArray}\n          changeInfoRowToEditMode={this.changeInfoRowToEditMode}\n          handleInputChange={this.handleInputChange}\n          handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n          addNewExperience={this.addNewExperience}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}