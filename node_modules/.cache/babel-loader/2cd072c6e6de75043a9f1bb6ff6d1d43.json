{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddExperienceForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = e => {\n      e.preventDefault();\n      this.props.changeWorkExperienceMode();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        value: this.props.inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"30\",\n        placeholder: \"Job Description Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.changeWorkExperienceMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeWorkExperienceMode,\n      children: \"+ Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WorkExperience extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeWorkExperienceMode = () => {\n      let modeState = this.state.workExperienceMode.isEdit;\n      modeState ? modeState = false : modeState = true;\n      this.setState({\n        workExperienceMode: {\n          isEdit: modeState\n        }\n      });\n    };\n\n    this.state = {\n      workExperienceMode: {\n        isEdit: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      appMode\n    } = this.props;\n    const {\n      workExperienceMode\n    } = this.state;\n    const rows = [];\n    let element;\n\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceBtn, {\n        changeWorkExperienceMode: this.changeWorkExperienceMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceForm, {\n        inputText: this.props.inputText,\n        changeWorkExperienceMode: this.changeWorkExperienceMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","AddExperienceForm","changeWorkExperienceMode","e","preventDefault","props","render","inputText","AddExperienceBtn","WorkExperience","constructor","modeState","state","workExperienceMode","isEdit","setState","appMode","rows","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass AddExperienceForm extends Component {\n  changeWorkExperienceMode = (e) => {\n    e.preventDefault();\n    this.props.changeWorkExperienceMode();\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          value={this.props.inputText}\n        ></input>\n        <input type=\"text\" placeholder=\"City\" autoComplete=\"off\"></input>\n        <input type=\"text\" placeholder=\"From\" autoComplete=\"off\"></input>\n        <input type=\"text\" placeholder=\"To\" autoComplete=\"off\"></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          placeholder=\"Job Description Achievements\"\n        ></textarea>\n        <button type=\"submit\" onClick={this.changeWorkExperienceMode}>\n          Cancel\n        </button>\n        <button type=\"submit\">+ Add</button>\n      </form>\n    );\n  }\n}\nclass AddExperienceBtn extends Component {\n  changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  render() {\n    return (\n      <button onClick={this.changeWorkExperienceMode}>+ Experience</button>\n    );\n  }\n}\n\nclass WorkExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workExperienceMode: {\n        isEdit: false\n      }\n    };\n  }\n  changeWorkExperienceMode = () => {\n    let modeState = this.state.workExperienceMode.isEdit;\n    modeState ? (modeState = false) : (modeState = true);\n    this.setState({\n      workExperienceMode: {\n        isEdit: modeState\n      }\n    });\n  };\n  render() {\n    const { appMode } = this.props;\n    const { workExperienceMode } = this.state;\n    const rows = [];\n    let element;\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n        />\n      );\n    }\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          inputText={this.props.inputText}\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Experiences</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}