{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeUserInfoToEditMode = e => this.props.changeUserInfoToEditMode(e.target);\n  }\n\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [info.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeUserInfoToEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeUserInfoToEditMode = element => {// const target = e.target.parentNode;\n      // const parent = Array.from(target.parentNode.children);\n      // const index = parent.indexOf(target);\n    };\n\n    this.state = {\n      userInfoArray: [{\n        name: 'firstName',\n        text: 'First Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'lastName',\n        text: 'Last Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'currentRole',\n        text: 'Fullstack Javascript Developer',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'address',\n        text: 'Houston, TX',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'phone',\n        text: '(555) 555-5555',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'email',\n        text: 'yourname@email.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'github',\n        text: 'https://github.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }]\n    };\n  }\n\n  render() {\n    const appMode = this.props.appMode;\n    let element;\n    const display = this.state.userInfoArray.map(info => {\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        element = /*#__PURE__*/_jsxDEV(InfoRow, {\n          info: info,\n          changeUserInfoToEditMode: this.changeUserInfoToEditMode\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this);\n      }\n\n      if (!appMode.isEdit && info.mode.isEdit) {\n        element = /*#__PURE__*/_jsxDEV(InfoRowForm, {\n          info: info\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this);\n      }\n\n      return element;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","uniqid","InfoRowForm","render","InfoRow","changeUserInfoToEditMode","e","props","target","info","text","UserInfo","constructor","element","state","userInfoArray","name","id","mode","isEdit","appMode","display","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass InfoRowForm extends Component {\n  render() {\n    return <form></form>;\n  }\n}\n\nclass InfoRow extends Component {\n  changeUserInfoToEditMode = (e) => this.props.changeUserInfoToEditMode(e.target);\n  render() {\n    const info = this.props.info;\n    return (\n      <p>\n        {info.text}\n        <span onClick={this.changeUserInfoToEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfoArray: [\n        {\n          name: 'firstName',\n          text: 'First Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'lastName',\n          text: 'Last Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'currentRole',\n          text: 'Fullstack Javascript Developer',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'address',\n          text: 'Houston, TX',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'phone',\n          text: '(555) 555-5555',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'email',\n          text: 'yourname@email.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'github',\n          text: 'https://github.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        }\n      ]\n    };\n  }\n  changeUserInfoToEditMode = (element) => {\n    // const target = e.target.parentNode;\n    // const parent = Array.from(target.parentNode.children);\n    // const index = parent.indexOf(target);\n  };\n  render() {\n    const appMode = this.props.appMode;\n    let element;\n    const display = this.state.userInfoArray.map((info) => {\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        element = <InfoRow info={info} key={info.id} changeUserInfoToEditMode={this.changeUserInfoToEditMode}/>;\n      }\n      if (!appMode.isEdit && info.mode.isEdit) {\n        element = <InfoRowForm info={info} key={info.id}/>;\n      }\n      return element;\n    });\n    return <div className=\"UserInfoContainer\">{display}</div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}