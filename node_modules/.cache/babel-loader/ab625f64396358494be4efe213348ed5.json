{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/Skills.js\";\nimport React, { Component } from 'react';\nimport './Skills.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddSkillForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.skillsComponentInput = e => this.props.skillsComponentInput(e.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.props.inputs,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewSkill,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddSkillBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = () => this.props.changeSkillsMode(true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeSkillsMode,\n      children: \"+ Skill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Skills extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeSkillsMode = boolean => this.props.changeSkillsMode(boolean);\n\n    this.skillsComponentInput = () => this.props.skillsComponentInput;\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      skillsComponentInput\n    } = this.props;\n    const rows = [];\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillBtn, {\n        changeSkillsMode: this.changeSkillsMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillForm, {\n        skillsComponentInput: skillsComponentInput // changeWorkExperienceMode={this.changeWorkExperienceMode}\n        // handleInputChange={this.handleInputChange}\n        // addNewExperience={this.addNewExperience}\n        // removeWorkExperience={this.removeWorkExperience}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/Skills.js"],"names":["React","Component","AddSkillForm","skillsComponentInput","e","props","target","value","render","inputs","handleInputChange","addNewSkill","AddSkillBtn","changeSkillsMode","Skills","boolean","modes","componentsArray","rows","element","appMode","isEdit","skillsMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCE,oBADmC,GACXC,CAAD,IAAO,KAAKC,KAAL,CAAWF,oBAAX,CAAgCC,CAAC,CAACE,MAAF,CAASC,KAAzC,CADK;AAAA;;AAEnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,MAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKC;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAhBkC;;AAkBrC,MAAMC,WAAN,SAA0BX,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCY,gBADkC,GACf,MAAM,KAAKR,KAAL,CAAWQ,gBAAX,CAA4B,IAA5B,CADS;AAAA;;AAElCL,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKK,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAJiC;;AAOpC,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7BY,gBAD6B,GACTE,OAAD,IAAa,KAAKV,KAAL,CAAWQ,gBAAX,CAA4BE,OAA5B,CADH;;AAAA,SAE7BZ,oBAF6B,GAEN,MAAM,KAAKE,KAAL,CAAWF,oBAFX;AAAA;;AAG7BK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA,eAAT;AAA0Bd,MAAAA;AAA1B,QAAmD,KAAKE,KAA9D;AACA,UAAMa,IAAI,GAAG,EAAb;AACA,QAAIC,OAAJ;;AACA,QAAI,CAACH,KAAK,CAACI,OAAN,CAAcC,MAAnB,EAA2B;AACzBF,MAAAA,OAAO,GAAG,IAAV;AACD;;AACD,QAAIH,KAAK,CAACI,OAAN,CAAcC,MAAd,IAAwB,CAACL,KAAK,CAACM,UAAN,CAAiBD,MAA9C,EAAsD;AACpDF,MAAAA,OAAO,gBACL,QAAC,WAAD;AACE,QAAA,gBAAgB,EAAE,KAAKN;AADzB;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,QAAIG,KAAK,CAACI,OAAN,CAAcC,MAAd,IAAwBL,KAAK,CAACM,UAAN,CAAiBD,MAA7C,EAAqD;AACnDF,MAAAA,OAAO,gBACL,QAAC,YAAD;AACE,QAAA,oBAAoB,EAAEhB,oBADxB,CAEE;AACA;AACA;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGe,IAFH,EAGGC,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnC4B;;AAsC/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Skills.css';\n\nclass AddSkillForm extends Component {\n  skillsComponentInput = (e) => this.props.skillsComponentInput(e.target.value);\n  render() {\n    return (\n      <form /* datakey={this.props.info} */>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={this.props.inputs}\n          onChange={this.handleInputChange}\n        ></input>\n        <button type=\"submit\" onClick={this.addNewSkill}>\n          Update\n        </button>\n      </form>\n    )\n  }\n}\nclass AddSkillBtn extends Component {\n  changeSkillsMode = () => this.props.changeSkillsMode(true);\n  render() {\n    return <button onClick={this.changeSkillsMode}>+ Skill</button>;\n  }\n}\n\nclass Skills extends Component {\n  changeSkillsMode = (boolean) => this.props.changeSkillsMode(boolean);\n  skillsComponentInput = () => this.props.skillsComponentInput\n  render() {\n    const { modes, componentsArray, skillsComponentInput } = this.props;\n    const rows = [];\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillBtn\n          changeSkillsMode={this.changeSkillsMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillForm\n          skillsComponentInput={skillsComponentInput}\n          // changeWorkExperienceMode={this.changeWorkExperienceMode}\n          // handleInputChange={this.handleInputChange}\n          // addNewExperience={this.addNewExperience}\n          // removeWorkExperience={this.removeWorkExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Skills</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}