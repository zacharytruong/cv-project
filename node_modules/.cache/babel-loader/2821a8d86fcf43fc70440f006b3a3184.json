{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport './UserInfo.css'; // class InfoRowForm extends Component {\n//   handleInputChange = (e) => {\n//     this.props.handleInputChange('inputText', e.target.value);\n//   };\n//   handleUserInfoUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUserInfoUpdateBtn('inputText', e.target);\n//   };\n//   render() {\n//     return (\n//       <form>\n//         <input\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           onChange={this.handleInputChange}\n//           value={this.props.inputText}\n//         ></input>\n//         <button type=\"submit\" onClick={this.handleUserInfoUpdateBtn}>\n//           Update\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n// class InfoRowNonEditMode extends Component {\n//   render() {\n//     const info = this.props.info;\n//     return <p>{info.text}</p>;\n//   }\n// }\n// class InfoRow extends Component {\n//   changeInfoRowToEditMode = (e) =>\n//     this.props.changeInfoRowToEditMode(e.target, this.props.userInfoArray);\n//   render() {\n//     const info = this.props.info;\n//     return (\n//       <p>\n//         {info.text}\n//         <span onClick={this.changeInfoRowToEditMode}>✎</span>\n//       </p>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeInfoRowToEditMode = (element, arr) => {\n      this.props.changeInfoRowToEditMode(element, arr);\n    };\n\n    this.handleInputChange = (field, element) => {\n      this.props.handleInputChange(field, element);\n    };\n\n    this.handleUserInfoUpdateBtn = (field, element) => {\n      this.props.handleUserInfoUpdateBtn(field, element);\n    };\n  }\n\n  render() {\n    const {\n      appMode,\n      userInfoArray\n    } = this.props;\n    const display = [];\n    userInfoArray.map(info => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRow, {\n          info: info,\n          userInfoArray: userInfoArray,\n          changeInfoRowToEditMode: this.changeInfoRowToEditMode\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowForm, {\n          info: info,\n          inputText: this.props.inputText,\n          handleInputChange: this.handleInputChange,\n          handleUserInfoUpdateBtn: this.handleUserInfoUpdateBtn\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowNonEditMode, {\n          info: info\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this));\n      }\n\n      return display;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","UserInfo","changeInfoRowToEditMode","element","arr","props","handleInputChange","field","handleUserInfoUpdateBtn","render","appMode","userInfoArray","display","map","info","isEdit","mode","push","id","inputText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BE,uBAD+B,GACL,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC1C,WAAKC,KAAL,CAAWH,uBAAX,CAAmCC,OAAnC,EAA4CC,GAA5C;AACD,KAH8B;;AAAA,SAI/BE,iBAJ+B,GAIX,CAACC,KAAD,EAAQJ,OAAR,KAAoB;AACtC,WAAKE,KAAL,CAAWC,iBAAX,CAA6BC,KAA7B,EAAoCJ,OAApC;AACD,KAN8B;;AAAA,SAO/BK,uBAP+B,GAOL,CAACD,KAAD,EAAQJ,OAAR,KAAoB;AAC5C,WAAKE,KAAL,CAAWG,uBAAX,CAAmCD,KAAnC,EAA0CJ,OAA1C;AACD,KAT8B;AAAA;;AAU/BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAYC,MAAAA;AAAZ,QAA8B,KAAKN,KAAzC;AACA,UAAMO,OAAO,GAAG,EAAhB;AACAD,IAAAA,aAAa,CAACE,GAAd,CAAmBC,IAAD,IAAU;AAC1B,UAAIJ,OAAO,CAACK,MAAR,IAAkB,CAACD,IAAI,CAACE,IAAL,CAAUD,MAAjC,EAAyC;AACvCH,QAAAA,OAAO,CAACK,IAAR,eACE,QAAC,OAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAGE,UAAA,aAAa,EAAEH,aAHjB;AAIE,UAAA,uBAAuB,EAAE,KAAKT;AAJhC,WAEOY,IAAI,CAACI,EAFZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;;AACD,UAAIR,OAAO,CAACK,MAAR,IAAkBD,IAAI,CAACE,IAAL,CAAUD,MAAhC,EAAwC;AACtCH,QAAAA,OAAO,CAACK,IAAR,eACE,QAAC,WAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAGE,UAAA,SAAS,EAAE,KAAKT,KAAL,CAAWc,SAHxB;AAIE,UAAA,iBAAiB,EAAE,KAAKb,iBAJ1B;AAKE,UAAA,uBAAuB,EAAE,KAAKE;AALhC,WAEOM,IAAI,CAACI,EAFZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;;AACD,UAAI,CAACR,OAAO,CAACK,MAAT,IAAmB,CAACD,IAAI,CAACE,IAAL,CAAUD,MAAlC,EAA0C;AACxCH,QAAAA,OAAO,CAACK,IAAR,eAAa,QAAC,kBAAD;AAAoB,UAAA,IAAI,EAAEH;AAA1B,WAAqCA,IAAI,CAACI,EAA1C;AAAA;AAAA;AAAA;AAAA,gBAAb;AACD;;AACD,aAAON,OAAP;AACD,KA1BD;AA2BA,wBAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAzC8B;;AA4CjC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './UserInfo.css';\n\n// class InfoRowForm extends Component {\n//   handleInputChange = (e) => {\n//     this.props.handleInputChange('inputText', e.target.value);\n//   };\n//   handleUserInfoUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUserInfoUpdateBtn('inputText', e.target);\n//   };\n//   render() {\n//     return (\n//       <form>\n//         <input\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           onChange={this.handleInputChange}\n//           value={this.props.inputText}\n//         ></input>\n//         <button type=\"submit\" onClick={this.handleUserInfoUpdateBtn}>\n//           Update\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// class InfoRowNonEditMode extends Component {\n//   render() {\n//     const info = this.props.info;\n//     return <p>{info.text}</p>;\n//   }\n// }\n\n// class InfoRow extends Component {\n//   changeInfoRowToEditMode = (e) =>\n//     this.props.changeInfoRowToEditMode(e.target, this.props.userInfoArray);\n//   render() {\n//     const info = this.props.info;\n//     return (\n//       <p>\n//         {info.text}\n//         <span onClick={this.changeInfoRowToEditMode}>✎</span>\n//       </p>\n//     );\n//   }\n// }\n\nclass UserInfo extends Component {\n  changeInfoRowToEditMode = (element, arr) => {\n    this.props.changeInfoRowToEditMode(element, arr);\n  };\n  handleInputChange = (field, element) => {\n    this.props.handleInputChange(field, element);\n  };\n  handleUserInfoUpdateBtn = (field, element) => {\n    this.props.handleUserInfoUpdateBtn(field, element);\n  };\n  render() {\n    const { appMode , userInfoArray } = this.props;\n    const display = [];\n    userInfoArray.map((info) => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push(\n          <InfoRow\n            info={info}\n            key={info.id}\n            userInfoArray={userInfoArray}\n            changeInfoRowToEditMode={this.changeInfoRowToEditMode}\n          />\n        );\n      }\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push(\n          <InfoRowForm\n            info={info}\n            key={info.id}\n            inputText={this.props.inputText}\n            handleInputChange={this.handleInputChange}\n            handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n          />\n        );\n      }\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push(<InfoRowNonEditMode info={info} key={info.id} />);\n      }\n      return display;\n    });\n    return <div className=\"UserInfoContainer\">{display}</div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}