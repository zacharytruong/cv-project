{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputChange = e => {\n      this.props.handleInputChange(e.target.value);\n    };\n\n    this.handleUserInfoUpdateBtn = e => {\n      e.preventDefault();\n      this.props.handleUserInfoUpdateBtn(e.target);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: this.handleInputChange,\n        value: this.props.inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleUserInfoUpdateBtn,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass InfoRowNonEditMode extends Component {\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: info.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeRowToEditMode = e => this.props.changeRowToEditMode(e.target, this.props.userInfoArray);\n  }\n\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [info.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeRowToEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeRowToEditMode = (element, arr) => {\n      this.props.changeRowToEditMode(element, arr);\n    };\n\n    this.handleInputChange = element => {\n      this.props.handleInputChange(element);\n    };\n\n    this.handleUserInfoUpdateBtn = element => {\n      this.props.handleUserInfoUpdateBtn(element);\n    };\n  }\n\n  render() {\n    const {\n      appMode,\n      userInfoArray\n    } = this.props;\n    const display = [];\n    userInfoArray.map(info => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRow, {\n          info: info,\n          userInfoArray: userInfoArray,\n          changeRowToEditMode: this.changeRowToEditMode\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowForm, {\n          info: info,\n          inputText: this.props.inputText,\n          handleInputChange: this.handleInputChange,\n          handleUserInfoUpdateBtn: this.handleUserInfoUpdateBtn\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowNonEditMode, {\n          info: info\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 22\n        }, this));\n      }\n\n      return display;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","InfoRowForm","handleInputChange","e","props","target","value","handleUserInfoUpdateBtn","preventDefault","render","inputText","InfoRowNonEditMode","info","text","InfoRow","changeRowToEditMode","userInfoArray","UserInfo","element","arr","appMode","display","map","isEdit","mode","push","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass InfoRowForm extends Component {\n  handleInputChange = (e) => {\n    this.props.handleInputChange(e.target.value);\n  };\n  handleUserInfoUpdateBtn = (e) => {\n    e.preventDefault();\n    this.props.handleUserInfoUpdateBtn(e.target);\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={this.handleInputChange}\n          value={this.props.inputText}\n        ></input>\n        <button type=\"submit\" onClick={this.handleUserInfoUpdateBtn}>\n          Update\n        </button>\n      </form>\n    );\n  }\n}\n\nclass InfoRowNonEditMode extends Component {\n  render() {\n    const info = this.props.info;\n    return <p>{info.text}</p>;\n  }\n}\n\nclass InfoRow extends Component {\n  changeRowToEditMode = (e) =>\n    this.props.changeRowToEditMode(e.target, this.props.userInfoArray);\n  render() {\n    const info = this.props.info;\n    return (\n      <p>\n        {info.text}\n        <span onClick={this.changeRowToEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  changeRowToEditMode = (element, arr) => {\n    this.props.changeRowToEditMode(element, arr);\n  };\n  handleInputChange = (element) => {\n    this.props.handleInputChange(element);\n  };\n  handleUserInfoUpdateBtn = (element) => {\n    this.props.handleUserInfoUpdateBtn(element);\n  };\n  render() {\n    const { appMode , userInfoArray } = this.props;\n    const display = [];\n    userInfoArray.map((info) => {\n      if (appMode.isEdit && !info.mode.isEdit) {\n        display.push(\n          <InfoRow\n            info={info}\n            key={info.id}\n            userInfoArray={userInfoArray}\n            changeRowToEditMode={this.changeRowToEditMode}\n          />\n        );\n      }\n      if (appMode.isEdit && info.mode.isEdit) {\n        display.push(\n          <InfoRowForm\n            info={info}\n            key={info.id}\n            inputText={this.props.inputText}\n            handleInputChange={this.handleInputChange}\n            handleUserInfoUpdateBtn={this.handleUserInfoUpdateBtn}\n          />\n        );\n      }\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push(<InfoRowNonEditMode info={info} key={info.id} />);\n      }\n      return display;\n    });\n    return <div className=\"UserInfoContainer\">{display}</div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}