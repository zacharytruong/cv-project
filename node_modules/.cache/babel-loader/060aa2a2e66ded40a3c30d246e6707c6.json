{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js\";\nimport React, { Component } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExperienceHistoryRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.removeWorkExperience = e => this.props.removeWorkExperience(e.target);\n  }\n\n  render() {\n    const {\n      work\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.companyNameText, \", \", work.cityText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.fromText, \" - \", work.toText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: work.jobDescriptionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.removeWorkExperience,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = e => {\n      e.preventDefault();\n      this.props.changeWorkExperienceMode();\n    };\n\n    this.handleInputChange = e => {\n      let target = e.target.name;\n      let field;\n\n      if (target === 'companyName') {\n        field = 'inputCompanyNameText';\n      } else if (target === 'city') {\n        field = 'inputCityText';\n      } else if (target === 'from') {\n        field = 'inputFromText';\n      } else if (target === 'to') {\n        field = 'inputToText';\n      } else if (target === 'jobDescription') {\n        field = 'inputJobDescriptionText';\n      }\n\n      this.props.handleInputChange(field, e.target.value);\n    };\n\n    this.addNewExperience = e => {\n      e.preventDefault();\n      this.props.addNewExperience();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        name: \"companyName\",\n        value: this.props.inputCompanyNameText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\",\n        name: \"city\",\n        value: this.props.inputCityText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\",\n        name: \"from\",\n        value: this.props.inputFromText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\",\n        name: \"to\",\n        value: this.props.inputToText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"30\",\n        name: \"jobDescription\",\n        placeholder: \"Job Description & Achievements\",\n        value: this.props.inputJobDescriptionText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.changeWorkExperienceMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewExperience,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeWorkExperienceMode,\n      children: \"+ Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WorkExperience extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => {\n      this.props.changeWorkExperienceMode();\n      this.props.turnOffUserInfoEditMode(this.props.userInfoArray);\n    };\n\n    this.handleInputChange = (field, element) => this.props.handleInputChange(field, element);\n\n    this.addNewExperience = () => this.props.addNewExperience();\n\n    this.removeWorkExperience = element => this.props.removeWorkExperience(element);\n  }\n\n  render() {\n    const {\n      appMode,\n      workExperienceArray,\n      workExperienceMode,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.props;\n    const rows = this.props.workExperienceArray.map(work => /*#__PURE__*/_jsxDEV(ExperienceHistoryRow, {\n      workExperienceArray: workExperienceArray,\n      work: work,\n      removeWorkExperience: this.removeWorkExperience\n    }, work.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this));\n    let element;\n\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceBtn, {\n        changeWorkExperienceMode: this.changeWorkExperienceMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceForm, {\n        inputCompanyNameText: inputCompanyNameText,\n        inputCityText: inputCityText,\n        inputFromText: inputFromText,\n        inputToText: inputToText,\n        inputJobDescriptionText: inputJobDescriptionText,\n        changeWorkExperienceMode: this.changeWorkExperienceMode,\n        handleInputChange: this.handleInputChange,\n        addNewExperience: this.addNewExperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","ExperienceHistoryRow","removeWorkExperience","e","props","target","render","work","companyNameText","cityText","fromText","toText","jobDescriptionText","AddExperienceForm","changeWorkExperienceMode","preventDefault","handleInputChange","name","field","value","addNewExperience","inputCompanyNameText","inputCityText","inputFromText","inputToText","inputJobDescriptionText","AddExperienceBtn","WorkExperience","turnOffUserInfoEditMode","userInfoArray","element","appMode","workExperienceArray","workExperienceMode","rows","map","id","isEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './'\n\nclass ExperienceHistoryRow extends Component {\n  removeWorkExperience = (e) => this.props.removeWorkExperience(e.target);\n  render() {\n    const { work } = this.props;\n    return (\n      <div>\n        <div>\n          <p>\n            {work.companyNameText}, {work.cityText}\n          </p>\n        </div>\n        <div>\n          <p>\n            {work.fromText} - {work.toText}\n          </p>\n          <p>{work.jobDescriptionText}</p>\n        </div>\n        <button type=\"submit\" onClick={this.removeWorkExperience}>\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nclass AddExperienceForm extends Component {\n  changeWorkExperienceMode = (e) => {\n    e.preventDefault();\n    this.props.changeWorkExperienceMode();\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let field;\n    if (target === 'companyName') {\n      field = 'inputCompanyNameText';\n    } else if (target === 'city') {\n      field = 'inputCityText';\n    } else if (target === 'from') {\n      field = 'inputFromText';\n    } else if (target === 'to') {\n      field = 'inputToText';\n    } else if (target === 'jobDescription') {\n      field = 'inputJobDescriptionText';\n    }\n    this.props.handleInputChange(field, e.target.value);\n  };\n  addNewExperience = (e) => {\n    e.preventDefault();\n    this.props.addNewExperience();\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"companyName\"\n          value={this.props.inputCompanyNameText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"city\"\n          value={this.props.inputCityText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"from\"\n          value={this.props.inputFromText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"to\"\n          value={this.props.inputToText}\n          onChange={this.handleInputChange}\n        ></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          name=\"jobDescription\"\n          placeholder=\"Job Description & Achievements\"\n          value={this.props.inputJobDescriptionText}\n          onChange={this.handleInputChange}\n        ></textarea>\n        <button type=\"submit\" onClick={this.changeWorkExperienceMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewExperience}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\nclass AddExperienceBtn extends Component {\n  changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  render() {\n    return (\n      <button onClick={this.changeWorkExperienceMode}>+ Experience</button>\n    );\n  }\n}\n\nclass WorkExperience extends Component {\n  changeWorkExperienceMode = () => {\n    this.props.changeWorkExperienceMode();\n    this.props.turnOffUserInfoEditMode(this.props.userInfoArray);\n  };\n  handleInputChange = (field, element) =>\n    this.props.handleInputChange(field, element);\n  addNewExperience = () => this.props.addNewExperience();\n  removeWorkExperience = (element) => this.props.removeWorkExperience(element);\n  render() {\n    const {\n      appMode,\n      workExperienceArray,\n      workExperienceMode,\n      inputCompanyNameText,\n      inputCityText,\n      inputFromText,\n      inputToText,\n      inputJobDescriptionText\n    } = this.props;\n    const rows = this.props.workExperienceArray.map((work) => (\n      <ExperienceHistoryRow\n        workExperienceArray={workExperienceArray}\n        work={work}\n        key={work.id}\n        removeWorkExperience={this.removeWorkExperience}\n      />\n    ));\n    let element;\n    if (appMode.isEdit && !workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n        />\n      );\n    }\n    if (appMode.isEdit && workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          inputCompanyNameText={inputCompanyNameText}\n          inputCityText={inputCityText}\n          inputFromText={inputFromText}\n          inputToText={inputToText}\n          inputJobDescriptionText={inputJobDescriptionText}\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n          handleInputChange={this.handleInputChange}\n          addNewExperience={this.addNewExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Experiences</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}