{"ast":null,"code":"import _classCallCheck from\"/Users/zachtruong/TOP/cv-project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/zachtruong/TOP/cv-project/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/zachtruong/TOP/cv-project/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/zachtruong/TOP/cv-project/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import'./WorkExperience.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExperienceHistoryRow=/*#__PURE__*/function(_Component){_inherits(ExperienceHistoryRow,_Component);var _super=_createSuper(ExperienceHistoryRow);function ExperienceHistoryRow(){var _this;_classCallCheck(this,ExperienceHistoryRow);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.removeClickedTarget=function(e){return _this.props.removeClickedTarget(e.target,_this.props.target,_this.props.arrName);};return _this;}_createClass(ExperienceHistoryRow,[{key:\"render\",value:function render(){var _this$props=this.props,modes=_this$props.modes,work=_this$props.work;var button;if(modes.appMode.isEdit){button=/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:this.removeClickedTarget,children:\"X\"});}else button=null;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"companyName\",children:[work.textCompanyName,\", \",work.textCompanyCity]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[work.textCompanyFromYear,\" - \",work.textCompanyToYear]}),/*#__PURE__*/_jsx(\"p\",{children:work.textCompanyRole}),/*#__PURE__*/_jsx(\"p\",{children:work.textCompanyRoleDescription})]}),button]});}}]);return ExperienceHistoryRow;}(Component);var AddExperienceForm=/*#__PURE__*/function(_Component2){_inherits(AddExperienceForm,_Component2);var _super2=_createSuper(AddExperienceForm);function AddExperienceForm(){var _this2;_classCallCheck(this,AddExperienceForm);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this2=_super2.call.apply(_super2,[this].concat(args));_this2.changeComponentMode=function(e){e.preventDefault();_this2.props.changeComponentMode(_this2.props.componentModeName,false);};_this2.handleInputChange=function(e){var target=e.target.name;var inputText=e.target.value;_this2.props.handleInputChange(_this2.props.componentInputName,target,inputText);};_this2.addNewExperience=function(e){e.preventDefault();_this2.props.addNewExperience();};return _this2;}_createClass(AddExperienceForm,[{key:\"render\",value:function render(){var _this$props$workExper=this.props.workExperienceComponentInput,inputCompanyName=_this$props$workExper.inputCompanyName,inputCompanyCity=_this$props$workExper.inputCompanyCity,inputCompanyFrom=_this$props$workExper.inputCompanyFrom,inputCompanyTo=_this$props$workExper.inputCompanyTo,inputCompanyRole=_this$props$workExper.inputCompanyRole,inputCompanyJobDescription=_this$props$workExper.inputCompanyJobDescription;return/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Company Name\",autoComplete:\"off\",name:\"inputCompanyName\",value:inputCompanyName,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"City\",autoComplete:\"off\",name:\"inputCompanyCity\",value:inputCompanyCity,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"From\",autoComplete:\"off\",name:\"inputCompanyFrom\",value:inputCompanyFrom,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"To\",autoComplete:\"off\",name:\"inputCompanyTo\",value:inputCompanyTo,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Role\",autoComplete:\"off\",name:\"inputCompanyRole\",value:inputCompanyRole,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"5\",cols:\"30\",name:\"inputCompanyJobDescription\",placeholder:\"Job Description & Achievements\",value:inputCompanyJobDescription,onChange:this.handleInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:this.changeComponentMode,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:this.addNewExperience,children:\"+ Add\"})]});}}]);return AddExperienceForm;}(Component);var AddExperienceBtn=/*#__PURE__*/function(_Component3){_inherits(AddExperienceBtn,_Component3);var _super3=_createSuper(AddExperienceBtn);function AddExperienceBtn(){var _this3;_classCallCheck(this,AddExperienceBtn);for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}_this3=_super3.call.apply(_super3,[this].concat(args));_this3.changeComponentMode=function(){return _this3.props.changeComponentMode(_this3.props.componentModeName,true);};return _this3;}_createClass(AddExperienceBtn,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"button\",{onClick:this.changeComponentMode,children:\"+ Experience\"});}}]);return AddExperienceBtn;}(Component);var WorkExperience=/*#__PURE__*/function(_Component4){_inherits(WorkExperience,_Component4);var _super4=_createSuper(WorkExperience);function WorkExperience(props){var _this4;_classCallCheck(this,WorkExperience);_this4=_super4.call(this,props);_this4.changeComponentMode=function(component,boolean){_this4.props.changeComponentMode(component,boolean);};_this4.handleInputChange=function(component,componentProp,inputText){return _this4.props.handleInputChange(component,componentProp,inputText);};_this4.addNewExperience=function(){return _this4.props.addNewExperience();};_this4.removeClickedTarget=function(element,target,arr){return _this4.props.removeClickedTarget(element,target,arr);};_this4.componentModeName='workExperienceMode';_this4.componentInputName='workExperienceComponentInput';_this4.arrName='workExperienceArray';_this4.target='experienceContainer';return _this4;}_createClass(WorkExperience,[{key:\"render\",value:function render(){var _this5=this;var _this$props2=this.props,modes=_this$props2.modes,workExperienceComponentInput=_this$props2.workExperienceComponentInput,componentsArray=_this$props2.componentsArray;var workExperienceArray=componentsArray.workExperienceArray;var rows=workExperienceArray.map(function(work){return/*#__PURE__*/_jsx(ExperienceHistoryRow,{modes:modes,target:_this5.target,arrName:_this5.arrName,work:work,removeClickedTarget:_this5.removeClickedTarget},work.id);});var element;if(!modes.appMode.isEdit){element=null;}if(modes.appMode.isEdit&&!modes.workExperienceMode.isEdit){element=/*#__PURE__*/_jsx(AddExperienceBtn,{componentModeName:this.componentModeName,changeComponentMode:this.changeComponentMode});}if(modes.appMode.isEdit&&modes.workExperienceMode.isEdit){element=/*#__PURE__*/_jsx(AddExperienceForm,{workExperienceComponentInput:workExperienceComponentInput,componentModeName:this.componentModeName,componentInputName:this.componentInputName,changeComponentMode:this.changeComponentMode,handleInputChange:this.handleInputChange,addNewExperience:this.addNewExperience});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container experience\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Experiences\"}),/*#__PURE__*/_jsx(\"ul\",{className:this.target,children:rows}),element]});}}]);return WorkExperience;}(Component);export default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","ExperienceHistoryRow","removeClickedTarget","e","props","target","arrName","modes","work","button","appMode","isEdit","textCompanyName","textCompanyCity","textCompanyFromYear","textCompanyToYear","textCompanyRole","textCompanyRoleDescription","AddExperienceForm","changeComponentMode","preventDefault","componentModeName","handleInputChange","name","inputText","value","componentInputName","addNewExperience","workExperienceComponentInput","inputCompanyName","inputCompanyCity","inputCompanyFrom","inputCompanyTo","inputCompanyRole","inputCompanyJobDescription","AddExperienceBtn","WorkExperience","component","boolean","componentProp","element","arr","componentsArray","workExperienceArray","rows","map","id","workExperienceMode"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,sBAAP,C,2FAEMC,CAAAA,oB,mXACJC,mB,CAAsB,SAACC,CAAD,QACpB,OAAKC,KAAL,CAAWF,mBAAX,CAA+BC,CAAC,CAACE,MAAjC,CAAyC,MAAKD,KAAL,CAAWC,MAApD,CAA4D,MAAKD,KAAL,CAAWE,OAAvE,CADoB,E,sEAEtB,iBAAS,CACP,gBAAwB,KAAKF,KAA7B,CAAQG,KAAR,aAAQA,KAAR,CAAeC,IAAf,aAAeA,IAAf,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAIF,KAAK,CAACG,OAAN,CAAcC,MAAlB,CAA0B,CACxBF,MAAM,cACJ,eACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,KAAKP,mBAFhB,eADF,CAQD,CATD,IASOO,CAAAA,MAAM,CAAG,IAAT,CACP,mBACE,oCACE,kCACE,WAAG,SAAS,CAAC,aAAb,WACGD,IAAI,CAACI,eADR,MAC2BJ,IAAI,CAACK,eADhC,GADF,EADF,cAME,oCACE,qBACGL,IAAI,CAACM,mBADR,OACgCN,IAAI,CAACO,iBADrC,GADF,cAIE,mBAAIP,IAAI,CAACQ,eAAT,EAJF,cAKE,mBAAIR,IAAI,CAACS,0BAAT,EALF,GANF,CAaGR,MAbH,GADF,CAiBD,C,kCAjCgCT,S,KAoC7BkB,CAAAA,iB,uXACJC,mB,CAAsB,SAAChB,CAAD,CAAO,CAC3BA,CAAC,CAACiB,cAAF,GACA,OAAKhB,KAAL,CAAWe,mBAAX,CAA+B,OAAKf,KAAL,CAAWiB,iBAA1C,CAA6D,KAA7D,EACD,C,QACDC,iB,CAAoB,SAACnB,CAAD,CAAO,CACzB,GAAIE,CAAAA,MAAM,CAAGF,CAAC,CAACE,MAAF,CAASkB,IAAtB,CACA,GAAIC,CAAAA,SAAS,CAAGrB,CAAC,CAACE,MAAF,CAASoB,KAAzB,CACA,OAAKrB,KAAL,CAAWkB,iBAAX,CACE,OAAKlB,KAAL,CAAWsB,kBADb,CAEErB,MAFF,CAGEmB,SAHF,EAKD,C,QACDG,gB,CAAmB,SAACxB,CAAD,CAAO,CACxBA,CAAC,CAACiB,cAAF,GACA,OAAKhB,KAAL,CAAWuB,gBAAX,GACD,C,oEACD,iBAAS,CACP,0BAOI,KAAKvB,KAAL,CAAWwB,4BAPf,CACEC,gBADF,uBACEA,gBADF,CAEEC,gBAFF,uBAEEA,gBAFF,CAGEC,gBAHF,uBAGEA,gBAHF,CAIEC,cAJF,uBAIEA,cAJF,CAKEC,gBALF,uBAKEA,gBALF,CAMEC,0BANF,uBAMEA,0BANF,CAQA,mBACE,qCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,cAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,kBAJP,CAKE,KAAK,CAAEL,gBALT,CAME,QAAQ,CAAE,KAAKP,iBANjB,EADF,cASE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,MAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,kBAJP,CAKE,KAAK,CAAEQ,gBALT,CAME,QAAQ,CAAE,KAAKR,iBANjB,EATF,cAiBE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,MAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,kBAJP,CAKE,KAAK,CAAES,gBALT,CAME,QAAQ,CAAE,KAAKT,iBANjB,EAjBF,cAyBE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,IAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,gBAJP,CAKE,KAAK,CAAEU,cALT,CAME,QAAQ,CAAE,KAAKV,iBANjB,EAzBF,cAiCE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,MAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,kBAJP,CAKE,KAAK,CAAEW,gBALT,CAME,QAAQ,CAAE,KAAKX,iBANjB,EAjCF,cAyCE,iBACE,IAAI,CAAC,GADP,CAEE,IAAI,CAAC,IAFP,CAGE,IAAI,CAAC,4BAHP,CAIE,WAAW,CAAC,gCAJd,CAKE,KAAK,CAAEY,0BALT,CAME,QAAQ,CAAE,KAAKZ,iBANjB,EAzCF,cAiDE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,KAAKH,mBAApC,oBAjDF,cAoDE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,KAAKQ,gBAApC,mBApDF,GADF,CA0DD,C,+BArF6B3B,S,KAwF1BmC,CAAAA,gB,mXACJhB,mB,CAAsB,iBACpB,QAAKf,KAAL,CAAWe,mBAAX,CAA+B,OAAKf,KAAL,CAAWiB,iBAA1C,CAA6D,IAA7D,CADoB,E,mEAEtB,iBAAS,CACP,mBAAO,eAAQ,OAAO,CAAE,KAAKF,mBAAtB,0BAAP,CACD,C,8BAL4BnB,S,KAQzBoC,CAAAA,c,mHACJ,wBAAYhC,KAAZ,CAAmB,iDACjB,yBAAMA,KAAN,EADiB,OAOnBe,mBAPmB,CAOG,SAACkB,SAAD,CAAYC,OAAZ,CAAwB,CAC5C,OAAKlC,KAAL,CAAWe,mBAAX,CAA+BkB,SAA/B,CAA0CC,OAA1C,EACD,CATkB,QAUnBhB,iBAVmB,CAUC,SAACe,SAAD,CAAYE,aAAZ,CAA2Bf,SAA3B,QAClB,QAAKpB,KAAL,CAAWkB,iBAAX,CAA6Be,SAA7B,CAAwCE,aAAxC,CAAuDf,SAAvD,CADkB,EAVD,QAYnBG,gBAZmB,CAYA,iBAAM,QAAKvB,KAAL,CAAWuB,gBAAX,EAAN,EAZA,QAanBzB,mBAbmB,CAaG,SAACsC,OAAD,CAAUnC,MAAV,CAAkBoC,GAAlB,QACpB,QAAKrC,KAAL,CAAWF,mBAAX,CAA+BsC,OAA/B,CAAwCnC,MAAxC,CAAgDoC,GAAhD,CADoB,EAbH,CAEjB,OAAKpB,iBAAL,CAAyB,oBAAzB,CACA,OAAKK,kBAAL,CAA0B,8BAA1B,CACA,OAAKpB,OAAL,CAAe,qBAAf,CACA,OAAKD,MAAL,CAAc,qBAAd,CALiB,cAMlB,C,iDASD,iBAAS,iBACP,iBAAiE,KAAKD,KAAtE,CAAQG,KAAR,cAAQA,KAAR,CAAeqB,4BAAf,cAAeA,4BAAf,CAA6Cc,eAA7C,cAA6CA,eAA7C,CACA,GAAMC,CAAAA,mBAAmB,CAAGD,eAAe,CAACC,mBAA5C,CACA,GAAMC,CAAAA,IAAI,CAAGD,mBAAmB,CAACE,GAApB,CAAwB,SAACrC,IAAD,qBACnC,KAAC,oBAAD,EACE,KAAK,CAAED,KADT,CAEE,MAAM,CAAE,MAAI,CAACF,MAFf,CAGE,OAAO,CAAE,MAAI,CAACC,OAHhB,CAIE,IAAI,CAAEE,IAJR,CAME,mBAAmB,CAAE,MAAI,CAACN,mBAN5B,EAKOM,IAAI,CAACsC,EALZ,CADmC,EAAxB,CAAb,CAUA,GAAIN,CAAAA,OAAJ,CACA,GAAI,CAACjC,KAAK,CAACG,OAAN,CAAcC,MAAnB,CAA2B,CACzB6B,OAAO,CAAG,IAAV,CACD,CACD,GAAIjC,KAAK,CAACG,OAAN,CAAcC,MAAd,EAAwB,CAACJ,KAAK,CAACwC,kBAAN,CAAyBpC,MAAtD,CAA8D,CAC5D6B,OAAO,cACL,KAAC,gBAAD,EACE,iBAAiB,CAAE,KAAKnB,iBAD1B,CAEE,mBAAmB,CAAE,KAAKF,mBAF5B,EADF,CAMD,CACD,GAAIZ,KAAK,CAACG,OAAN,CAAcC,MAAd,EAAwBJ,KAAK,CAACwC,kBAAN,CAAyBpC,MAArD,CAA6D,CAC3D6B,OAAO,cACL,KAAC,iBAAD,EACE,4BAA4B,CAAEZ,4BADhC,CAEE,iBAAiB,CAAE,KAAKP,iBAF1B,CAGE,kBAAkB,CAAE,KAAKK,kBAH3B,CAIE,mBAAmB,CAAE,KAAKP,mBAJ5B,CAKE,iBAAiB,CAAE,KAAKG,iBAL1B,CAME,gBAAgB,CAAE,KAAKK,gBANzB,EADF,CAUD,CACD,mBACE,aAAK,SAAS,CAAC,sBAAf,wBACE,mCADF,cAEE,WAAI,SAAS,CAAE,KAAKtB,MAApB,UAA6BuC,IAA7B,EAFF,CAGGJ,OAHH,GADF,CAOD,C,4BA5D0BxC,S,EA+D7B,cAAeoC,CAAAA,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport './WorkExperience.css';\n\nclass ExperienceHistoryRow extends Component {\n  removeClickedTarget = (e) =>\n    this.props.removeClickedTarget(e.target, this.props.target, this.props.arrName);\n  render() {\n    const { modes, work } = this.props;\n    let button;\n    if (modes.appMode.isEdit) {\n      button = (\n        <button\n          type=\"submit\"\n          onClick={this.removeClickedTarget}\n        >\n          X\n        </button>\n      );\n    } else button = null;\n    return (\n      <div>\n        <div>\n          <p className='companyName'>\n            {work.textCompanyName}, {work.textCompanyCity}\n          </p>\n        </div>\n        <div>\n          <p>\n            {work.textCompanyFromYear} - {work.textCompanyToYear}\n          </p>\n          <p>{work.textCompanyRole}</p>\n          <p>{work.textCompanyRoleDescription}</p>\n        </div>\n        {button}\n      </div>\n    );\n  }\n}\n\nclass AddExperienceForm extends Component {\n  changeComponentMode = (e) => {\n    e.preventDefault();\n    this.props.changeComponentMode(this.props.componentModeName, false);\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let inputText = e.target.value;\n    this.props.handleInputChange(\n      this.props.componentInputName,\n      target,\n      inputText\n    );\n  };\n  addNewExperience = (e) => {\n    e.preventDefault();\n    this.props.addNewExperience();\n  };\n  render() {\n    const {\n      inputCompanyName,\n      inputCompanyCity,\n      inputCompanyFrom,\n      inputCompanyTo,\n      inputCompanyRole,\n      inputCompanyJobDescription\n    } = this.props.workExperienceComponentInput;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"inputCompanyName\"\n          value={inputCompanyName}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"inputCompanyCity\"\n          value={inputCompanyCity}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"inputCompanyFrom\"\n          value={inputCompanyFrom}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"inputCompanyTo\"\n          value={inputCompanyTo}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Role\"\n          autoComplete=\"off\"\n          name=\"inputCompanyRole\"\n          value={inputCompanyRole}\n          onChange={this.handleInputChange}\n        ></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          name=\"inputCompanyJobDescription\"\n          placeholder=\"Job Description & Achievements\"\n          value={inputCompanyJobDescription}\n          onChange={this.handleInputChange}\n        ></textarea>\n        <button type=\"submit\" onClick={this.changeComponentMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewExperience}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\n\nclass AddExperienceBtn extends Component {\n  changeComponentMode = () =>\n    this.props.changeComponentMode(this.props.componentModeName, true);\n  render() {\n    return <button onClick={this.changeComponentMode}>+ Experience</button>;\n  }\n}\n\nclass WorkExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.componentModeName = 'workExperienceMode';\n    this.componentInputName = 'workExperienceComponentInput';\n    this.arrName = 'workExperienceArray';\n    this.target = 'experienceContainer';\n  }\n  changeComponentMode = (component, boolean) => {\n    this.props.changeComponentMode(component, boolean);\n  };\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  addNewExperience = () => this.props.addNewExperience();\n  removeClickedTarget = (element, target, arr) =>\n    this.props.removeClickedTarget(element, target, arr);\n  render() {\n    const { modes, workExperienceComponentInput, componentsArray } = this.props;\n    const workExperienceArray = componentsArray.workExperienceArray;\n    const rows = workExperienceArray.map((work) => (\n      <ExperienceHistoryRow\n        modes={modes}\n        target={this.target}\n        arrName={this.arrName}\n        work={work}\n        key={work.id}\n        removeClickedTarget={this.removeClickedTarget}\n      />\n    ));\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          componentModeName={this.componentModeName}\n          changeComponentMode={this.changeComponentMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          workExperienceComponentInput={workExperienceComponentInput}\n          componentModeName={this.componentModeName}\n          componentInputName={this.componentInputName}\n          changeComponentMode={this.changeComponentMode}\n          handleInputChange={this.handleInputChange}\n          addNewExperience={this.addNewExperience}\n        />\n      );\n    }\n    return (\n      <div className='container experience'>\n        <h2>Experiences</h2>\n        <ul className={this.target}>{rows}</ul>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}