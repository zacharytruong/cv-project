{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicInfoEditMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props; // let form;\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleUpdateBtn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        onChange: this.handleInputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfoPreviewMode extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => {\n      this.props.turnOnEditMode(e);\n    };\n  }\n\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [infoNameValueObj.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.turnOnEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => {\n      this.props.turnOnEditMode(e);\n    };\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n  }\n\n  render() {\n    const userInfoArray = [];\n    const {\n      userInfo\n    } = this.props;\n\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (infoName === 'firstName' || infoName === 'lastName' || infoName === 'currentRole' || infoName === 'addr' || infoName === 'phone' || infoName === 'email' || infoName === 'github') {\n        userInfoArray.push({\n          [infoName]: infoNameValueObj\n        });\n      } else return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userInfoArray.map((userInfo, event) => {\n        let display;\n        const userBasicInfo = Object.entries(userInfo);\n\n        if (userBasicInfo[0][1].mode.isView) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoPreviewMode, {\n            infoNameValueObj: userBasicInfo[0][1],\n            turnOnEditMode: this.turnOnEditMode\n          }, userBasicInfo[0][1].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n          return display;\n        } else return null; // if (userBasicInfo[0][1].mode.isEdit) {\n        //   display = (<BasicInfoEditMode\n        //     key={userBasicInfo[0][1].id}\n        //     infoNameValueObj={userBasicInfo[0][1]}\n        //     handleInputText={this.handleInputText}\n        //     handleUpdateBtn={this.handleUpdateBtn}/>)\n        // }\n\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = () => this.props.turnOnEditMode();\n\n    this.handleInputText = e => this.props.handleInputText(e);\n\n    this.handleUpdateBtn = e => this.props.handleUpdateBtn(e);\n  }\n\n  render() {\n    const {\n      mode,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n        mode: mode,\n        userInfo: userInfo,\n        turnOnEditMode: this.turnOnEditMode,\n        handleInputText: this.handleInputText,\n        handleUpdateBtn: this.handleUpdateBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInfo, {\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","BasicInfoEditMode","handleInputText","e","props","handleUpdateBtn","render","infoNameValueObj","BasicInfoPreviewMode","turnOnEditMode","text","BasicInfo","userInfoArray","userInfo","infoName","Object","entries","push","map","event","display","userBasicInfo","mode","isView","id","ContactInfo","UserInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass BasicInfoEditMode extends Component {\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  render() {\n    const { infoNameValueObj } = this.props;\n    // let form;\n    return (\n      <form onSubmit={this.handleUpdateBtn}>\n        <input type=\"text\" autoComplete=\"off\" onChange={this.handleInputText} />\n        <button type=\"submit\">Update</button>\n      </form>\n    );\n  }\n}\n\nclass BasicInfoPreviewMode extends Component {\n  turnOnEditMode = (e) => {\n    this.props.turnOnEditMode(e);\n  };\n  render() {\n    const { infoNameValueObj } = this.props;\n    return (\n      <p>\n        {infoNameValueObj.text} <span onClick={this.turnOnEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass BasicInfo extends Component {\n  turnOnEditMode = (e) => {\n    this.props.turnOnEditMode(e);\n  };\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  render() {\n    const userInfoArray = [];\n    const { userInfo } = this.props;\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (\n        infoName === 'firstName' ||\n        infoName === 'lastName' ||\n        infoName === 'currentRole' ||\n        infoName === 'addr' ||\n        infoName === 'phone' ||\n        infoName === 'email' ||\n        infoName === 'github'\n      ) {\n        userInfoArray.push({ [infoName]: infoNameValueObj });\n      } else return;\n    }\n    return (\n      <div>\n        {userInfoArray.map((userInfo, event) => {\n          let display;\n          const userBasicInfo = Object.entries(userInfo);\n          if (userBasicInfo[0][1].mode.isView) {\n            display = (\n              <BasicInfoPreviewMode\n                key={userBasicInfo[0][1].id}\n                infoNameValueObj={userBasicInfo[0][1]}\n                turnOnEditMode={this.turnOnEditMode}\n              />\n            );\n            return display;\n          } else return null;\n          // if (userBasicInfo[0][1].mode.isEdit) {\n          //   display = (<BasicInfoEditMode\n          //     key={userBasicInfo[0][1].id}\n          //     infoNameValueObj={userBasicInfo[0][1]}\n          //     handleInputText={this.handleInputText}\n          //     handleUpdateBtn={this.handleUpdateBtn}/>)\n          // }\n        })}\n      </div>\n    );\n  }\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return <div className=\"ContactInfo\"></div>;\n  }\n}\n\nclass UserInfo extends Component {\n  turnOnEditMode = () => this.props.turnOnEditMode();\n  handleInputText = (e) => this.props.handleInputText(e);\n  handleUpdateBtn = (e) => this.props.handleUpdateBtn(e);\n  render() {\n    const { mode, userInfo } = this.props;\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicInfo\n          mode={mode}\n          userInfo={userInfo}\n          turnOnEditMode={this.turnOnEditMode}\n          handleInputText={this.handleInputText}\n          handleUpdateBtn={this.handleUpdateBtn}\n        />\n        <ContactInfo userInfo={this.props.userInfo} />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}