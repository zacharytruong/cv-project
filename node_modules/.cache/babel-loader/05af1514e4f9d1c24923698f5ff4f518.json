{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/Skills.js\";\nimport React, { Component } from 'react';\nimport './Skills.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SkillList extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.removeClickedTarget = e => this.props.removeClickedTarget(e.target, this.props.target, this.props.arrName);\n  }\n\n  render() {\n    const {\n      modes,\n      skill\n    } = this.props;\n    let removeBtn;\n\n    if (!modes.appMode.isEdit) {\n      removeBtn = null;\n    } else {\n      removeBtn = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.removeClickedTarget,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [skill.textSkillName, \" \", removeBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddSkillForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleInputChange = e => {\n      let target = e.target.name;\n      let inputText = e.target.value;\n      this.props.handleInputChange(this.props.componentInputName, target, inputText);\n    };\n\n    this.addNewSkill = e => {\n      e.preventDefault();\n      this.props.addNewSkill();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        name: \"inputSkillName\",\n        value: this.props.inputs,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewSkill,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddSkillBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeComponentMode = () => this.props.changeComponentMode(this.props.componentModeName, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeComponentMode,\n      children: \"+ Skill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeComponentMode = (component, boolean) => {\n      this.props.changeComponentMode(component, boolean);\n    };\n\n    this.addNewSkill = () => this.props.addNewSkill();\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n\n    this.removeClickedTarget = (element, target, arr) => this.props.removeClickedTarget(element, target, arr);\n\n    this.componentModeName = 'skillsMode';\n    this.componentInputName = 'skillsComponentInput';\n    this.arrName = 'skillsArray';\n    this.target = 'skillContainer';\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      inputs\n    } = this.props;\n    const skillsArray = componentsArray.skillsArray;\n    const rows = skillsArray.map(skill => /*#__PURE__*/_jsxDEV(SkillList, {\n      modes: modes,\n      target: this.target,\n      arrName: this.arrName,\n      skill: skill,\n      removeClickedTarget: this.removeClickedTarget\n    }, skill.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this));\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillBtn, {\n        componentModeName: this.componentModeName,\n        changeComponentMode: this.changeComponentMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddSkillForm, {\n        inputs: inputs,\n        componentModeName: this.componentModeName,\n        componentInputName: this.componentInputName,\n        handleInputChange: this.handleInputChange,\n        addNewSkill: this.addNewSkill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: this.target,\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/Skills.js"],"names":["React","Component","SkillList","removeClickedTarget","e","props","target","arrName","render","modes","skill","removeBtn","appMode","isEdit","textSkillName","AddSkillForm","handleInputChange","name","inputText","value","componentInputName","addNewSkill","preventDefault","inputs","AddSkillBtn","changeComponentMode","componentModeName","Skills","constructor","component","boolean","componentProp","element","arr","componentsArray","skillsArray","rows","map","id","skillsMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Skills.css';\n\nclass SkillList extends Component {\n  removeClickedTarget = (e) =>\n    this.props.removeClickedTarget(e.target, this.props.target, this.props.arrName);\n  render() {\n    const { modes, skill } = this.props;\n    let removeBtn;\n    if (!modes.appMode.isEdit) {\n      removeBtn = null;\n    } else {\n      removeBtn = <span onClick={this.removeClickedTarget}>X</span>;\n    }\n    return (\n      <li>\n        {skill.textSkillName} {removeBtn}\n      </li>\n    );\n  }\n}\n\nclass AddSkillForm extends Component {\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let inputText = e.target.value;\n    this.props.handleInputChange(this.props.componentInputName, target, inputText);\n  };\n  addNewSkill = (e) => {\n    e.preventDefault();\n    this.props.addNewSkill();\n  };\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"inputSkillName\"\n          value={this.props.inputs}\n          onChange={this.handleInputChange}\n        ></input>\n        <button type=\"submit\" onClick={this.addNewSkill}>\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nclass AddSkillBtn extends Component {\n  changeComponentMode = () => this.props.changeComponentMode(this.props.componentModeName, true);\n  render() {\n    return <button onClick={this.changeComponentMode}>+ Skill</button>;\n  }\n}\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.componentModeName = 'skillsMode';\n    this.componentInputName = 'skillsComponentInput';\n    this.arrName = 'skillsArray';\n    this.target = 'skillContainer';\n  }\n  changeComponentMode = (component, boolean) => {\n    this.props.changeComponentMode(component, boolean);\n  };\n  addNewSkill = () => this.props.addNewSkill();\n  handleInputChange = (component, componentProp, inputText) =>\n  this.props.handleInputChange(component, componentProp, inputText);\n  removeClickedTarget = (element, target, arr) =>\n    this.props.removeClickedTarget(element, target, arr);\n  render() {\n    const { modes, componentsArray, inputs } = this.props;\n    const skillsArray = componentsArray.skillsArray;\n    const rows = skillsArray.map((skill) => (\n      <SkillList\n        modes={modes}\n        target={this.target}\n        arrName={this.arrName}\n        skill={skill}\n        key={skill.id}\n        removeClickedTarget={this.removeClickedTarget}\n      />\n    ));\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillBtn\n        componentModeName={this.componentModeName}\n        changeComponentMode={this.changeComponentMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.skillsMode.isEdit) {\n      element = (\n        <AddSkillForm\n          inputs={inputs}\n          componentModeName={this.componentModeName}\n          componentInputName={this.componentInputName}\n          handleInputChange={this.handleInputChange}\n          addNewSkill={this.addNewSkill}\n        />\n      );\n    }\n    return (\n      <div className='container'>\n        <h2>Skills</h2>\n        <ul className={this.target}>\n          {rows}\n        </ul>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}