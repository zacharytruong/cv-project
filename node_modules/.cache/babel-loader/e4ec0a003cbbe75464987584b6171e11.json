{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js\";\nimport React, { Component } from 'react';\nimport './WorkExperience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExperienceHistoryRow extends Component {\n  // removeWorkExperience = (e) => this.props.removeWorkExperience(e.target);\n  render() {\n    const {\n      modes,\n      work\n    } = this.props;\n    let button;\n\n    if (modes.appMode.isEdit) {\n      button = /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.removeWorkExperience,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, this);\n    } else button = null;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.textCompanyName, \", \", work.textCompanyCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.textCompanyFromYear, \" - \", work.textCompanyToYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: work.textCompanyRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: work.textCompanyRoleDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = e => {\n      e.preventDefault();\n      this.props.changeWorkExperienceMode(false);\n    };\n\n    this.handleInputChange = e => {\n      let target = e.target.name;\n      let inputText = e.target.value;\n      const component = 'workExperienceComponentInput';\n      this.props.handleInputChange(component, target, inputText);\n    };\n\n    this.addNewExperience = e => {\n      e.preventDefault();\n      this.props.addNewExperience();\n    };\n  }\n\n  render() {\n    const {\n      inputCompanyName,\n      inputCompanyCity,\n      inputCompanyFrom,\n      inputCompanyTo,\n      inputCompanyRole,\n      inputCompanyJobDescription\n    } = this.props.workExperienceComponentInput;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        name: \"inputCompanyName\",\n        value: inputCompanyName,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\",\n        name: \"inputCompanyCity\",\n        value: inputCompanyCity,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\",\n        name: \"inputCompanyFrom\",\n        value: inputCompanyFrom,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\",\n        name: \"inputCompanyTo\",\n        value: inputCompanyTo,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Role\",\n        autoComplete: \"off\",\n        name: \"inputCompanyRole\",\n        value: inputCompanyRole,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"30\",\n        name: \"inputCompanyJobDescription\",\n        placeholder: \"Job Description & Achievements\",\n        value: inputCompanyJobDescription,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick:\n        /* this.changeWorkExperienceMode */\n        this.changeComponentMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewExperience,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceBtn extends Component {\n  // changeWorkExperienceMode = () => this.props.changeWorkExperienceMode(true);\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick:\n      /* this.changeWorkExperienceMode */\n      this.changeComponentMode,\n      children: \"+ Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WorkExperience extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = boolean => {\n      this.props.changeWorkExperienceMode(boolean);\n    };\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n\n    this.addNewExperience = () => this.props.addNewExperience();\n\n    this.removeWorkExperience = element => this.props.removeWorkExperience(element);\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      workExperienceComponentInput\n    } = this.props;\n    const workExperienceArray = componentsArray.workExperienceArray;\n    const rows = workExperienceArray.map(work => /*#__PURE__*/_jsxDEV(ExperienceHistoryRow, {\n      modes: modes,\n      work: work,\n      removeWorkExperience: this.removeWorkExperience\n    }, work.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this));\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceBtn // changeWorkExperienceMode={this.changeWorkExperienceMode}\n      , {\n        changeComponentMode: this.changeComponentMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceForm, {\n        workExperienceComponentInput: workExperienceComponentInput // changeWorkExperienceMode={this.changeWorkExperienceMode}\n        ,\n        changeComponentMode: this.changeComponentMode,\n        handleInputChange: this.handleInputChange,\n        addNewExperience: this.addNewExperience,\n        removeWorkExperience: this.removeWorkExperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"experienceContainer\",\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","ExperienceHistoryRow","render","modes","work","props","button","appMode","isEdit","removeWorkExperience","textCompanyName","textCompanyCity","textCompanyFromYear","textCompanyToYear","textCompanyRole","textCompanyRoleDescription","AddExperienceForm","changeWorkExperienceMode","e","preventDefault","handleInputChange","target","name","inputText","value","component","addNewExperience","inputCompanyName","inputCompanyCity","inputCompanyFrom","inputCompanyTo","inputCompanyRole","inputCompanyJobDescription","workExperienceComponentInput","changeComponentMode","AddExperienceBtn","WorkExperience","boolean","componentProp","element","componentsArray","workExperienceArray","rows","map","id","workExperienceMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './WorkExperience.css';\n\nclass ExperienceHistoryRow extends Component {\n  // removeWorkExperience = (e) => this.props.removeWorkExperience(e.target);\n  render() {\n    const { modes, work } = this.props;\n    let button;\n    if (modes.appMode.isEdit) {\n      button = <button type=\"submit\" onClick={this.removeWorkExperience}>\n      X\n    </button>;\n    } else button = null;\n    return (\n      <div>\n        <div>\n          <p>\n            {work.textCompanyName}, {work.textCompanyCity}\n          </p>\n        </div>\n        <div>\n          <p>\n            {work.textCompanyFromYear} - {work.textCompanyToYear}\n          </p>\n          <p>{work.textCompanyRole}</p>\n          <p>{work.textCompanyRoleDescription}</p>\n        </div>\n        {button}\n      </div>\n    );\n  }\n}\n\nclass AddExperienceForm extends Component {\n  changeWorkExperienceMode = (e) => {\n    e.preventDefault();\n    this.props.changeWorkExperienceMode(false);\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    let inputText = e.target.value;\n    const component = 'workExperienceComponentInput';\n    this.props.handleInputChange(component, target, inputText);\n  };\n  addNewExperience = (e) => {\n    e.preventDefault();\n    this.props.addNewExperience();\n  };\n  render() {\n    const {\n      inputCompanyName,\n      inputCompanyCity,\n      inputCompanyFrom,\n      inputCompanyTo,\n      inputCompanyRole,\n      inputCompanyJobDescription\n    } = this.props.workExperienceComponentInput;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"inputCompanyName\"\n          value={inputCompanyName}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"inputCompanyCity\"\n          value={inputCompanyCity}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"inputCompanyFrom\"\n          value={inputCompanyFrom}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"inputCompanyTo\"\n          value={inputCompanyTo}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Role\"\n          autoComplete=\"off\"\n          name=\"inputCompanyRole\"\n          value={inputCompanyRole}\n          onChange={this.handleInputChange}\n        ></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          name=\"inputCompanyJobDescription\"\n          placeholder=\"Job Description & Achievements\"\n          value={inputCompanyJobDescription}\n          onChange={this.handleInputChange}\n        ></textarea>\n        <button type=\"submit\" onClick={/* this.changeWorkExperienceMode */this.changeComponentMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewExperience}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\n\nclass AddExperienceBtn extends Component {\n  // changeWorkExperienceMode = () => this.props.changeWorkExperienceMode(true);\n  render() {\n    return (\n      <button onClick={/* this.changeWorkExperienceMode */this.changeComponentMode}>+ Experience</button>\n    );\n  }\n}\n\nclass WorkExperience extends Component {\n  changeWorkExperienceMode = (boolean) => {\n    this.props.changeWorkExperienceMode(boolean);\n  };\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  addNewExperience = () => this.props.addNewExperience();\n  removeWorkExperience = (element) => this.props.removeWorkExperience(element);\n  render() {\n    const {\n      modes,\n      componentsArray,\n      workExperienceComponentInput,\n    } = this.props;\n    const workExperienceArray = componentsArray.workExperienceArray;\n    const rows = workExperienceArray.map((work) => (\n      <ExperienceHistoryRow\n        modes={modes}\n        work={work}\n        key={work.id}\n        removeWorkExperience={this.removeWorkExperience}\n      />\n    ));\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          // changeWorkExperienceMode={this.changeWorkExperienceMode}\n          changeComponentMode={this.changeComponentMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          workExperienceComponentInput={workExperienceComponentInput}\n          // changeWorkExperienceMode={this.changeWorkExperienceMode}\n          changeComponentMode={this.changeComponentMode}\n          handleInputChange={this.handleInputChange}\n          addNewExperience={this.addNewExperience}\n          removeWorkExperience={this.removeWorkExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Experiences</h2>\n        <ul className='experienceContainer'>\n        {rows}\n        </ul>\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}