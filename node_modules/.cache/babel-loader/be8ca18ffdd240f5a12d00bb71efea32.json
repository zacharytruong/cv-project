{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoRowForm extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass InfoRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeUserInfoToEditMode = e => this.props.changeUserInfoToEditMode(e.target);\n  }\n\n  render() {\n    const info = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [info.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeUserInfoToEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeUserInfoToEditMode = element => {\n      const target = element.parentNode;\n      const parent = Array.from(target.parentNode.children);\n      const index = parent.indexOf(target);\n      const newArray = [...this.state.userInfoArray];\n      newArray[index].mode.isEdit = true;\n      this.setState({\n        userInfoArray: newArray\n      });\n    };\n\n    this.state = {\n      userInfoArray: [{\n        name: 'firstName',\n        text: 'First Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'lastName',\n        text: 'Last Name',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'currentRole',\n        text: 'Fullstack Javascript Developer',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'address',\n        text: 'Houston, TX',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'phone',\n        text: '(555) 555-5555',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'email',\n        text: 'yourname@email.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }, {\n        name: 'github',\n        text: 'https://github.com',\n        id: uniqid(),\n        mode: {\n          isEdit: false\n        }\n      }]\n    };\n  }\n\n  render() {\n    const appMode = this.props.appMode;\n    const display = [];\n    this.state.userInfoArray.map(info => {\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRow, {\n          info: info,\n          changeUserInfoToEditMode: this.changeUserInfoToEditMode\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this));\n      }\n\n      if (!appMode.isEdit && info.mode.isEdit) {\n        display.push( /*#__PURE__*/_jsxDEV(InfoRowForm, {\n          info: info\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }, this));\n      }\n\n      return display;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","uniqid","InfoRowForm","render","InfoRow","changeUserInfoToEditMode","e","props","target","info","text","UserInfo","constructor","element","parentNode","parent","Array","from","children","index","indexOf","newArray","state","userInfoArray","mode","isEdit","setState","name","id","appMode","display","map","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass InfoRowForm extends Component {\n  render() {\n    return (\n    <form>\n      <input></input>\n      <button></button>\n    </form>\n    );\n  }\n}\n\nclass InfoRow extends Component {\n  changeUserInfoToEditMode = (e) =>\n    this.props.changeUserInfoToEditMode(e.target);\n  render() {\n    const info = this.props.info;\n    return (\n      <p>\n        {info.text}\n        <span onClick={this.changeUserInfoToEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfoArray: [\n        {\n          name: 'firstName',\n          text: 'First Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'lastName',\n          text: 'Last Name',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'currentRole',\n          text: 'Fullstack Javascript Developer',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'address',\n          text: 'Houston, TX',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'phone',\n          text: '(555) 555-5555',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'email',\n          text: 'yourname@email.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        },\n        {\n          name: 'github',\n          text: 'https://github.com',\n          id: uniqid(),\n          mode: {\n            isEdit: false\n          }\n        }\n      ]\n    };\n  }\n  changeUserInfoToEditMode = (element) => {\n    const target = element.parentNode;\n    const parent = Array.from(target.parentNode.children);\n    const index = parent.indexOf(target);\n    const newArray = [...this.state.userInfoArray ];\n    newArray[index].mode.isEdit = true;\n    this.setState({\n      userInfoArray: newArray\n    });\n  };\n  render() {\n    const appMode = this.props.appMode;\n    const display = [];\n    this.state.userInfoArray.map((info) => {\n      if (!appMode.isEdit && !info.mode.isEdit) {\n        display.push(\n          <InfoRow\n            info={info}\n            key={info.id}\n            changeUserInfoToEditMode={this.changeUserInfoToEditMode}\n          />\n        );\n      }\n      if (!appMode.isEdit && info.mode.isEdit) {\n        display.push(<InfoRowForm info={info} key={info.id} />);\n      }\n      return display;\n    });\n    return <div className=\"UserInfoContainer\">{display}</div>;\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}