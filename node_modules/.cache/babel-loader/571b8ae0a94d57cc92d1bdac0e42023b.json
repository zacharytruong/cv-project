{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js\";\nimport React, { Component } from 'react';\nimport './WorkExperience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExperienceHistoryRow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.removeWorkExperience = e => this.props.removeWorkExperience(e.target);\n  }\n\n  render() {\n    const {\n      work\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.textCompanyName, \", \", work.textCompanyCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [work.textCompanyFromYear, \" - \", work.textCompanyToYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: work.textCompanyRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: work.textCompanyRoleDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.removeWorkExperience,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = e => {\n      e.preventDefault();\n      this.props.changeWorkExperienceMode();\n    };\n\n    this.handleInputChange = e => {\n      let target = e.target.name; // let field;\n      // if (target === 'companyName') {\n      //   field = 'inputCompanyNameText';\n      // } else if (target === 'city') {\n      //   field = 'inputCityText';\n      // } else if (target === 'from') {\n      //   field = 'inputFromText';\n      // } else if (target === 'to') {\n      //   field = 'inputToText';\n      // } else if (target === 'jobDescription') {\n      //   field = 'inputJobDescriptionText';\n      // }\n\n      this.props.handleInputChange(target);\n    };\n\n    this.addNewExperience = e => {\n      e.preventDefault();\n      this.props.addNewExperience();\n    };\n  }\n\n  render() {\n    const {\n      inputCompanyName,\n      inputCompanyCity\n    } = this.props.workExperienceComponentInput;\n    const {\n      textCompanyName,\n      textCompanyCity,\n      textCompanyFromYear,\n      textCompanyToYear,\n      textCompanyRole,\n      textCompanyRoleDescription\n    } = this.props.textWorkExperienceComponent;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        autoComplete: \"off\",\n        name: \"textCompanyName\",\n        value: this.props.inputCompanyNameText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        autoComplete: \"off\",\n        name: \"textCompanyCity\",\n        value: this.props.inputCityText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"From\",\n        autoComplete: \"off\",\n        name: \"textCompanyFromYear\",\n        value: this.props.inputFromText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"To\",\n        autoComplete: \"off\",\n        name: \"textCompanyToYear\",\n        value: this.props.inputToText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Role\",\n        autoComplete: \"off\",\n        name: \"textCompanyRole\",\n        value: this.props.inputToText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"30\",\n        name: \"textCompanyRoleDescription\",\n        placeholder: \"Job Description & Achievements\",\n        value: this.props.inputJobDescriptionText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.changeWorkExperienceMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addNewExperience,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass AddExperienceBtn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.changeWorkExperienceMode,\n      children: \"+ Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass WorkExperience extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.changeWorkExperienceMode = () => {\n      this.props.changeWorkExperienceMode();\n    };\n\n    this.handleInputChange = (component, componentProp, inputText) => this.props.handleInputChange(component, componentProp, inputText);\n\n    this.addNewExperience = () => this.props.addNewExperience();\n\n    this.removeWorkExperience = element => this.props.removeWorkExperience(element);\n  }\n\n  render() {\n    const {\n      modes,\n      componentsArray,\n      workExperienceComponentInput,\n      textWorkExperienceComponent\n    } = this.props;\n    const workExperienceArray = componentsArray.workExperienceArray;\n    const rows = workExperienceArray.map(work => /*#__PURE__*/_jsxDEV(ExperienceHistoryRow, {\n      workExperienceArray: workExperienceArray,\n      work: work,\n      removeWorkExperience: this.removeWorkExperience\n    }, work.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this));\n    let element;\n\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n\n    if (modes.appMode.isEdit && !modes.workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceBtn, {\n        changeWorkExperienceMode: this.changeWorkExperienceMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (modes.appMode.isEdit && modes.workExperienceMode.isEdit) {\n      element = /*#__PURE__*/_jsxDEV(AddExperienceForm, {\n        workExperienceComponentInput: workExperienceComponentInput,\n        textWorkExperienceComponent: textWorkExperienceComponent,\n        changeWorkExperienceMode: this.changeWorkExperienceMode,\n        handleInputChange: this.handleInputChange,\n        addNewExperience: this.addNewExperience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Experiences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), rows, element]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WorkExperience;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/WorkExperience.js"],"names":["React","Component","ExperienceHistoryRow","removeWorkExperience","e","props","target","render","work","textCompanyName","textCompanyCity","textCompanyFromYear","textCompanyToYear","textCompanyRole","textCompanyRoleDescription","AddExperienceForm","changeWorkExperienceMode","preventDefault","handleInputChange","name","addNewExperience","inputCompanyName","inputCompanyCity","workExperienceComponentInput","textWorkExperienceComponent","inputCompanyNameText","inputCityText","inputFromText","inputToText","inputJobDescriptionText","AddExperienceBtn","WorkExperience","component","componentProp","inputText","element","modes","componentsArray","workExperienceArray","rows","map","id","appMode","isEdit","workExperienceMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAC3CE,oBAD2C,GACnBC,CAAD,IAAO,KAAKC,KAAL,CAAWF,oBAAX,CAAgCC,CAAC,CAACE,MAAlC,CADa;AAAA;;AAE3CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACA,wBACE;AAAA,8BACE;AAAA,+BACE;AAAA,qBACGG,IAAI,CAACC,eADR,QAC2BD,IAAI,CAACE,eADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAA,qBACGF,IAAI,CAACG,mBADR,SACgCH,IAAI,CAACI,iBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKX,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAvB0C;;AA0B7C,MAAMY,iBAAN,SAAgCd,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACxCe,wBADwC,GACZZ,CAAD,IAAO;AAChCA,MAAAA,CAAC,CAACa,cAAF;AACA,WAAKZ,KAAL,CAAWW,wBAAX;AACD,KAJuC;;AAAA,SAKxCE,iBALwC,GAKnBd,CAAD,IAAO;AACzB,UAAIE,MAAM,GAAGF,CAAC,CAACE,MAAF,CAASa,IAAtB,CADyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAKd,KAAL,CAAWa,iBAAX,CAA6BZ,MAA7B;AACD,KApBuC;;AAAA,SAqBxCc,gBArBwC,GAqBpBhB,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACa,cAAF;AACA,WAAKZ,KAAL,CAAWe,gBAAX;AACD,KAxBuC;AAAA;;AAyBxCb,EAAAA,MAAM,GAAG;AACP,UAAM;AACJc,MAAAA,gBADI;AAEJC,MAAAA;AAFI,QAID,KAAKjB,KAAL,CAAWkB,4BAJhB;AAKA,UAAM;AACJd,MAAAA,eADI;AAEJC,MAAAA,eAFI;AAGJC,MAAAA,mBAHI;AAIJC,MAAAA,iBAJI;AAKJC,MAAAA,eALI;AAMJC,MAAAA;AANI,QAOF,KAAKT,KAAL,CAAWmB,2BAPf;AAQA,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,iBAJP;AAKE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWoB,oBALpB;AAME,QAAA,QAAQ,EAAE,KAAKP;AANjB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,iBAJP;AAKE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWqB,aALpB;AAME,QAAA,QAAQ,EAAE,KAAKR;AANjB;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,qBAJP;AAKE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWsB,aALpB;AAME,QAAA,QAAQ,EAAE,KAAKT;AANjB;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,IAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,mBAJP;AAKE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWuB,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKV;AANjB;AAAA;AAAA;AAAA;AAAA,cAzBF,eAiCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,IAAI,EAAC,iBAJP;AAKE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWuB,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKV;AANjB;AAAA;AAAA;AAAA;AAAA,cAjCF,eAyCE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAC,4BAHP;AAIE,QAAA,WAAW,EAAC,gCAJd;AAKE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWwB,uBALpB;AAME,QAAA,QAAQ,EAAE,KAAKX;AANjB;AAAA;AAAA;AAAA;AAAA,cAzCF,eAiDE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKF,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDF,eAoDE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKI,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0DD;;AAjGuC;;AAoG1C,MAAMU,gBAAN,SAA+B7B,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCe,wBADuC,GACZ,MAAM,KAAKX,KAAL,CAAWW,wBAAX,EADM;AAAA;;AAEvCT,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKS,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AANsC;;AASzC,MAAMe,cAAN,SAA6B9B,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCe,wBADqC,GACV,MAAM;AAC/B,WAAKX,KAAL,CAAWW,wBAAX;AACD,KAHoC;;AAAA,SAIrCE,iBAJqC,GAIjB,CAACc,SAAD,EAAYC,aAAZ,EAA2BC,SAA3B,KAClB,KAAK7B,KAAL,CAAWa,iBAAX,CAA6Bc,SAA7B,EAAwCC,aAAxC,EAAuDC,SAAvD,CALmC;;AAAA,SAMrCd,gBANqC,GAMlB,MAAM,KAAKf,KAAL,CAAWe,gBAAX,EANY;;AAAA,SAOrCjB,oBAPqC,GAObgC,OAAD,IAAa,KAAK9B,KAAL,CAAWF,oBAAX,CAAgCgC,OAAhC,CAPC;AAAA;;AAQrC5B,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ6B,MAAAA,KADI;AAEJC,MAAAA,eAFI;AAGJd,MAAAA,4BAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKnB,KALT;AAMA,UAAMiC,mBAAmB,GAAGD,eAAe,CAACC,mBAA5C;AACA,UAAMC,IAAI,GAAGD,mBAAmB,CAACE,GAApB,CAAyBhC,IAAD,iBACnC,QAAC,oBAAD;AACE,MAAA,mBAAmB,EAAE8B,mBADvB;AAEE,MAAA,IAAI,EAAE9B,IAFR;AAIE,MAAA,oBAAoB,EAAE,KAAKL;AAJ7B,OAGOK,IAAI,CAACiC,EAHZ;AAAA;AAAA;AAAA;AAAA,YADW,CAAb;AAQA,QAAIN,OAAJ;;AACA,QAAI,CAACC,KAAK,CAACM,OAAN,CAAcC,MAAnB,EAA2B;AACzBR,MAAAA,OAAO,GAAG,IAAV;AACD;;AACD,QAAIC,KAAK,CAACM,OAAN,CAAcC,MAAd,IAAwB,CAACP,KAAK,CAACQ,kBAAN,CAAyBD,MAAtD,EAA8D;AAC5DR,MAAAA,OAAO,gBACL,QAAC,gBAAD;AACE,QAAA,wBAAwB,EAAE,KAAKnB;AADjC;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,QAAIoB,KAAK,CAACM,OAAN,CAAcC,MAAd,IAAwBP,KAAK,CAACQ,kBAAN,CAAyBD,MAArD,EAA6D;AAC3DR,MAAAA,OAAO,gBACL,QAAC,iBAAD;AACE,QAAA,4BAA4B,EAAEZ,4BADhC;AAEE,QAAA,2BAA2B,EAAEC,2BAF/B;AAGE,QAAA,wBAAwB,EAAE,KAAKR,wBAHjC;AAIE,QAAA,iBAAiB,EAAE,KAAKE,iBAJ1B;AAKE,QAAA,gBAAgB,EAAE,KAAKE;AALzB;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGmB,IAFH,EAGGJ,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AArDoC;;AAwDvC,eAAeJ,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport './WorkExperience.css';\n\nclass ExperienceHistoryRow extends Component {\n  removeWorkExperience = (e) => this.props.removeWorkExperience(e.target);\n  render() {\n    const { work } = this.props;\n    return (\n      <div>\n        <div>\n          <p>\n            {work.textCompanyName}, {work.textCompanyCity}\n          </p>\n        </div>\n        <div>\n          <p>\n            {work.textCompanyFromYear} - {work.textCompanyToYear}\n          </p>\n          <p>{work.textCompanyRole}</p>\n          <p>{work.textCompanyRoleDescription}</p>\n        </div>\n        <button type=\"submit\" onClick={this.removeWorkExperience}>\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nclass AddExperienceForm extends Component {\n  changeWorkExperienceMode = (e) => {\n    e.preventDefault();\n    this.props.changeWorkExperienceMode();\n  };\n  handleInputChange = (e) => {\n    let target = e.target.name;\n    // let field;\n    // if (target === 'companyName') {\n    //   field = 'inputCompanyNameText';\n    // } else if (target === 'city') {\n    //   field = 'inputCityText';\n    // } else if (target === 'from') {\n    //   field = 'inputFromText';\n    // } else if (target === 'to') {\n    //   field = 'inputToText';\n    // } else if (target === 'jobDescription') {\n    //   field = 'inputJobDescriptionText';\n    // }\n    this.props.handleInputChange(target);\n  };\n  addNewExperience = (e) => {\n    e.preventDefault();\n    this.props.addNewExperience();\n  };\n  render() {\n    const {\n      inputCompanyName,\n      inputCompanyCity,\n      \n     } = this.props.workExperienceComponentInput;\n    const {\n      textCompanyName,\n      textCompanyCity,\n      textCompanyFromYear,\n      textCompanyToYear,\n      textCompanyRole,\n      textCompanyRoleDescription\n    } = this.props.textWorkExperienceComponent;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          autoComplete=\"off\"\n          name=\"textCompanyName\"\n          value={this.props.inputCompanyNameText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          autoComplete=\"off\"\n          name=\"textCompanyCity\"\n          value={this.props.inputCityText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"From\"\n          autoComplete=\"off\"\n          name=\"textCompanyFromYear\"\n          value={this.props.inputFromText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"To\"\n          autoComplete=\"off\"\n          name=\"textCompanyToYear\"\n          value={this.props.inputToText}\n          onChange={this.handleInputChange}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Role\"\n          autoComplete=\"off\"\n          name=\"textCompanyRole\"\n          value={this.props.inputToText}\n          onChange={this.handleInputChange}\n        ></input>\n        <textarea\n          rows=\"5\"\n          cols=\"30\"\n          name=\"textCompanyRoleDescription\"\n          placeholder=\"Job Description & Achievements\"\n          value={this.props.inputJobDescriptionText}\n          onChange={this.handleInputChange}\n        ></textarea>\n        <button type=\"submit\" onClick={this.changeWorkExperienceMode}>\n          Cancel\n        </button>\n        <button type=\"submit\" onClick={this.addNewExperience}>\n          + Add\n        </button>\n      </form>\n    );\n  }\n}\n\nclass AddExperienceBtn extends Component {\n  changeWorkExperienceMode = () => this.props.changeWorkExperienceMode();\n  render() {\n    return (\n      <button onClick={this.changeWorkExperienceMode}>+ Experience</button>\n    );\n  }\n}\n\nclass WorkExperience extends Component {\n  changeWorkExperienceMode = () => {\n    this.props.changeWorkExperienceMode();\n  };\n  handleInputChange = (component, componentProp, inputText) =>\n    this.props.handleInputChange(component, componentProp, inputText);\n  addNewExperience = () => this.props.addNewExperience();\n  removeWorkExperience = (element) => this.props.removeWorkExperience(element);\n  render() {\n    const {\n      modes,\n      componentsArray,\n      workExperienceComponentInput,\n      textWorkExperienceComponent\n    } = this.props;\n    const workExperienceArray = componentsArray.workExperienceArray;\n    const rows = workExperienceArray.map((work) => (\n      <ExperienceHistoryRow\n        workExperienceArray={workExperienceArray}\n        work={work}\n        key={work.id}\n        removeWorkExperience={this.removeWorkExperience}\n      />\n    ));\n    let element;\n    if (!modes.appMode.isEdit) {\n      element = null;\n    }\n    if (modes.appMode.isEdit && !modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceBtn\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n        />\n      );\n    }\n    if (modes.appMode.isEdit && modes.workExperienceMode.isEdit) {\n      element = (\n        <AddExperienceForm\n          workExperienceComponentInput={workExperienceComponentInput}\n          textWorkExperienceComponent={textWorkExperienceComponent}\n          changeWorkExperienceMode={this.changeWorkExperienceMode}\n          handleInputChange={this.handleInputChange}\n          addNewExperience={this.addNewExperience}\n        />\n      );\n    }\n    return (\n      <div>\n        <h2>Experiences</h2>\n        {rows}\n        {element}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperience;\n"]},"metadata":{},"sourceType":"module"}