{"ast":null,"code":"var _jsxFileName = \"/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js\";\nimport React, { Component } from 'react'; // class BasicInfoEditMode extends Component {\n//   getNewFirstNameValue = (e) => {\n//     this.props.getNewFirstNameValue(e);\n//   };\n//   handleUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUpdateBtn(e);\n//   }\n//   render() {\n//     const userInfo = this.props.userInfo;\n//     return (\n//       <form onSubmit={this.handleUpdateBtn}>\n//         <input\n//           type=\"text\"\n//           id=\"firstName\"\n//           placeholder=\"Enter your first name...\"\n//           value={userInfo.firstName.text}\n//           autoComplete=\"off\"\n//           onChange={this.getNewFirstNameValue}\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicInfoPreviewMode extends Component {\n  render() {\n    const {\n      infoNameValueObj\n    } = this.props.infoNameValueObj;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.turnOnEditMode,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass BasicInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = e => this.props.turnOnEditMode(e);\n  }\n\n  render() {\n    const userInfoArray = [];\n    const {\n      userInfo,\n      mode\n    } = this.props;\n\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (infoName === 'firstName' || infoName === 'lastName' || infoName === 'currentRole' || infoName === 'addr' || infoName === 'phone' || infoName === 'email' || infoName === 'github') {\n        userInfoArray.push({\n          [infoName]: infoNameValueObj\n        });\n      } else return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userInfoArray.map(info => {\n        let display;\n\n        if (mode.isPreview) {\n          display = /*#__PURE__*/_jsxDEV(BasicInfoPreviewMode, {\n            infoNameValueObj: info.infoNameValueObj\n          }, info.infoNameValueObj.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        }\n\n        return display;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.turnOnEditMode = () => this.props.turnOnEditMode();\n  }\n\n  render() {\n    const {\n      mode,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n        mode: mode,\n        userInfo: userInfo,\n        turnOnEditMode: this.turnOnEditMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInfo, {\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"sources":["/Users/zachtruong/TOP/cv-project/src/components/UserInfo.js"],"names":["React","Component","BasicInfoPreviewMode","render","infoNameValueObj","props","text","turnOnEditMode","id","BasicInfo","e","userInfoArray","userInfo","mode","infoName","Object","entries","push","map","info","display","isPreview","ContactInfo","UserInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAC3CE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKC,KAAL,CAAWD,gBAAxC;AACA,wBACE;AAAA,iBACGE,IADH,oBACS;AAAM,QAAA,OAAO,EAAE,KAAKC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADT;AAAA,OAAQC,EAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAR0C;;AAW7C,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCM,cADgC,GACdG,CAAD,IAAO,KAAKL,KAAL,CAAWE,cAAX,CAA0BG,CAA1B,CADQ;AAAA;;AAEhCP,EAAAA,MAAM,GAAG;AACP,UAAMQ,aAAa,GAAG,EAAtB;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqB,KAAKR,KAAhC;;AACA,SAAK,MAAM,CAACS,QAAD,EAAWV,gBAAX,CAAX,IAA2CW,MAAM,CAACC,OAAP,CAAeJ,QAAf,CAA3C,EAAqE;AACnE,UACEE,QAAQ,KAAK,WAAb,IACAA,QAAQ,KAAK,UADb,IAEAA,QAAQ,KAAK,aAFb,IAGAA,QAAQ,KAAK,MAHb,IAIAA,QAAQ,KAAK,OAJb,IAKAA,QAAQ,KAAK,OALb,IAMAA,QAAQ,KAAK,QAPf,EAQE;AACAH,QAAAA,aAAa,CAACM,IAAd,CAAmB;AAAE,WAACH,QAAD,GAAYV;AAAd,SAAnB;AACD,OAVD,MAUO;AACR;;AACD,wBACE;AAAA,gBACGO,aAAa,CAACO,GAAd,CAAmBC,IAAD,IAAU;AAC3B,YAAIC,OAAJ;;AACA,YAAIP,IAAI,CAACQ,SAAT,EAAoB;AAClBD,UAAAA,OAAO,gBACL,QAAC,oBAAD;AAAqD,YAAA,gBAAgB,EAAED,IAAI,CAACf;AAA5E,aAA2Be,IAAI,CAACf,gBAAL,CAAsBI,EAAjD;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD;;AACD,eAAOY,OAAP;AACD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA/B+B;;AAkClC,MAAME,WAAN,SAA0BrB,SAA1B,CAAoC;AAClCE,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAHiC;;AAMpC,MAAMoB,QAAN,SAAuBtB,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BM,cAD+B,GACd,MAAM,KAAKF,KAAL,CAAWE,cAAX,EADQ;AAAA;;AAE/BJ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEU,MAAAA,IAAF;AAAQD,MAAAA;AAAR,QAAqB,KAAKP,KAAhC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAEQ,IADR;AAEE,QAAA,QAAQ,EAAED,QAFZ;AAGE,QAAA,cAAc,EAAE,KAAKL;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWO;AAAlC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAd8B;;AAiBjC,eAAeW,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n// class BasicInfoEditMode extends Component {\n//   getNewFirstNameValue = (e) => {\n//     this.props.getNewFirstNameValue(e);\n//   };\n//   handleUpdateBtn = (e) => {\n//     e.preventDefault();\n//     this.props.handleUpdateBtn(e);\n//   }\n//   render() {\n//     const userInfo = this.props.userInfo;\n//     return (\n//       <form onSubmit={this.handleUpdateBtn}>\n//         <input\n//           type=\"text\"\n//           id=\"firstName\"\n//           placeholder=\"Enter your first name...\"\n//           value={userInfo.firstName.text}\n//           autoComplete=\"off\"\n//           onChange={this.getNewFirstNameValue}\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//     );\n//   }\n// }\n\nclass BasicInfoPreviewMode extends Component {\n  render() {\n    const { infoNameValueObj } = this.props.infoNameValueObj;\n    return (\n      <p key={id}>\n        {text} <span onClick={this.turnOnEditMode}>âœŽ</span>\n      </p>\n    );\n  }\n}\n\nclass BasicInfo extends Component {\n  turnOnEditMode = (e) => this.props.turnOnEditMode(e);\n  render() {\n    const userInfoArray = [];\n    const { userInfo, mode } = this.props;\n    for (const [infoName, infoNameValueObj] of Object.entries(userInfo)) {\n      if (\n        infoName === 'firstName' ||\n        infoName === 'lastName' ||\n        infoName === 'currentRole' ||\n        infoName === 'addr' ||\n        infoName === 'phone' ||\n        infoName === 'email' ||\n        infoName === 'github'\n      ) {\n        userInfoArray.push({ [infoName]: infoNameValueObj });\n      } else return;\n    }\n    return (\n      <div>\n        {userInfoArray.map((info) => {\n          let display;\n          if (mode.isPreview) {\n            display = (\n              <BasicInfoPreviewMode key={info.infoNameValueObj.id} infoNameValueObj={info.infoNameValueObj} />\n            );\n          }\n          return display;\n        })}\n      </div>\n    );\n  }\n}\n\nclass ContactInfo extends Component {\n  render() {\n    return <div className=\"ContactInfo\"></div>;\n  }\n}\n\nclass UserInfo extends Component {\n  turnOnEditMode = () => this.props.turnOnEditMode();\n  render() {\n    const { mode, userInfo } = this.props;\n    return (\n      <div className=\"UserInfoContainer\">\n        <BasicInfo\n          mode={mode}\n          userInfo={userInfo}\n          turnOnEditMode={this.turnOnEditMode}\n        />\n        <ContactInfo userInfo={this.props.userInfo} />\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}